{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/index.js","../../../../../../../node_modules/underscore/underscore.js","src/js/_debug.js","src/js/reporting/charts/HighchartsGraph.js","src/js/reporting/charts/charts-templates.js","src/js/reporting/reporting.js","src/js/survey/_question.js","src/js/survey/_survey.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrhgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzljrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClfile":"scripts.min.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (global){\n'use strict';\n\n\nglobal.App = {\n\n    debug: require('./_debug.js'),\n    question: require('./survey/_question.js'),\n    survey: require('./survey/_survey.js'),\n    reporting: require('./reporting/reporting.js')\n};\n\n(function($) {\n\n\t//var $ = require('jquery');\n    $( document ).ready(function() {\n\n        // var $parent_el = $(\"#brim-main\");\n        // //console.log(navigator.userAgent.toLowerCase().indexOf('safari/') > -1);\n        // if (platform.name === 'Safari' && platform.os.family === 'iOS' && parseInt(platform.os.version, 10) > 8 || platform.ua.indexOf('like Mac OS X') != -1) {\n\n        //     var scream,\n        //         brim;\n\n        //     scream = gajus.Scream({\n        //         width: {\n        //             portrait: 320,\n        //             landscape: 640\n        //         }\n        //     });\n\n        //     brim = gajus.Brim({\n        //         viewport: scream\n        //     });\n\n        //     brim.on('viewchange', function (e) {\n        //         document.body.className = e.viewName;\n        //     });\n\n        // } else {\n        //     $parent_el = $('#not-ios-8');\n        //     $('#not-ios-8').css('display', 'block');\n        // }\n\n    \tif($('.procyncRoot').length || $('.procyncIntro').length) {\n        \tglobal.App.survey.init();\n        }\n\n    });\n\n})(global.jQuery);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxuZ2xvYmFsLkFwcCA9IHtcblxuICAgIGRlYnVnOiByZXF1aXJlKCcuL19kZWJ1Zy5qcycpLFxuICAgIHF1ZXN0aW9uOiByZXF1aXJlKCcuL3N1cnZleS9fcXVlc3Rpb24uanMnKSxcbiAgICBzdXJ2ZXk6IHJlcXVpcmUoJy4vc3VydmV5L19zdXJ2ZXkuanMnKSxcbiAgICByZXBvcnRpbmc6IHJlcXVpcmUoJy4vcmVwb3J0aW5nL3JlcG9ydGluZy5qcycpXG59O1xuXG4oZnVuY3Rpb24oJCkge1xuXG5cdC8vdmFyICQgPSByZXF1aXJlKCdqcXVlcnknKTtcbiAgICAkKCBkb2N1bWVudCApLnJlYWR5KGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIC8vIHZhciAkcGFyZW50X2VsID0gJChcIiNicmltLW1haW5cIik7XG4gICAgICAgIC8vIC8vY29uc29sZS5sb2cobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ3NhZmFyaS8nKSA+IC0xKTtcbiAgICAgICAgLy8gaWYgKHBsYXRmb3JtLm5hbWUgPT09ICdTYWZhcmknICYmIHBsYXRmb3JtLm9zLmZhbWlseSA9PT0gJ2lPUycgJiYgcGFyc2VJbnQocGxhdGZvcm0ub3MudmVyc2lvbiwgMTApID4gOCB8fCBwbGF0Zm9ybS51YS5pbmRleE9mKCdsaWtlIE1hYyBPUyBYJykgIT0gLTEpIHtcblxuICAgICAgICAvLyAgICAgdmFyIHNjcmVhbSxcbiAgICAgICAgLy8gICAgICAgICBicmltO1xuXG4gICAgICAgIC8vICAgICBzY3JlYW0gPSBnYWp1cy5TY3JlYW0oe1xuICAgICAgICAvLyAgICAgICAgIHdpZHRoOiB7XG4gICAgICAgIC8vICAgICAgICAgICAgIHBvcnRyYWl0OiAzMjAsXG4gICAgICAgIC8vICAgICAgICAgICAgIGxhbmRzY2FwZTogNjQwXG4gICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAvLyAgICAgfSk7XG5cbiAgICAgICAgLy8gICAgIGJyaW0gPSBnYWp1cy5CcmltKHtcbiAgICAgICAgLy8gICAgICAgICB2aWV3cG9ydDogc2NyZWFtXG4gICAgICAgIC8vICAgICB9KTtcblxuICAgICAgICAvLyAgICAgYnJpbS5vbigndmlld2NoYW5nZScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIC8vICAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPSBlLnZpZXdOYW1lO1xuICAgICAgICAvLyAgICAgfSk7XG5cbiAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgLy8gICAgICRwYXJlbnRfZWwgPSAkKCcjbm90LWlvcy04Jyk7XG4gICAgICAgIC8vICAgICAkKCcjbm90LWlvcy04JykuY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgICAgIC8vIH1cblxuICAgIFx0aWYoJCgnLnByb2N5bmNSb290JykubGVuZ3RoIHx8ICQoJy5wcm9jeW5jSW50cm8nKS5sZW5ndGgpIHtcbiAgICAgICAgXHRnbG9iYWwuQXBwLnN1cnZleS5pbml0KCk7XG4gICAgICAgIH1cblxuICAgIH0pO1xuXG59KShnbG9iYWwualF1ZXJ5KTtcbiJdfQ==","//     Underscore.js 1.8.2\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.2';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var isArrayLike = function(collection) {\n    var length = collection && collection.length;\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, target, fromIndex) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    return _.indexOf(obj, target, typeof fromIndex == 'number' && fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = input && input.length; i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, 'length').length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = list && list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    var i = 0, length = array && array.length;\n    if (typeof isSorted == 'number') {\n      i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n    } else if (isSorted && length) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n    if (item !== item) {\n      return _.findIndex(slice.call(array, i), _.isNaN);\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    var idx = array ? array.length : 0;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    if (item !== item) {\n      return _.findLastIndex(slice.call(array, 0, idx), _.isNaN);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = array != null && array.length;\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createIndexFinder(1);\n\n  _.findLastIndex = createIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    \n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of \n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n  \n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","'use strict';\n\nvar Edebug = function() {\n\n};\n\nEdebug.prototype =  {\n\n\tvar_dump: function(obj, indentSpaces) {\n\n\t\tvar self = this;\n\n\t    switch (typeof obj) {\n\t        case \"object\":\n\t            console.log(self.indent(indentSpaces) + typeof obj + \":\");\n\t            indentSpaces += 2; // indent further as we are entering the objects properties\n\t            for (var i in obj) {\n\n\t            \tif(obj.hasOwnProperty(i)) {\n\t\t                console.log(self.indent(indentSpaces) + i + \":\");\n\t\t                self.var_dump(obj[i], indentSpaces + 1);\n\t\t            }\n\t            }\n\t            break;\n\t        default: // things that are not objects, primatives... etc...\n\t            console.log(self.indent(indentSpaces) + typeof obj + \":\" + obj);\n\t            break;\n\t    }\n\t},\n\n\t// just for styling with indents\n\tindent: function(spaces)\n\t{\n\t    var i = 0;\n\t    var rtr = \"\";\n\t    while(i <= (spaces * 2)) {\n\t        rtr += \" \";\n\t        i++;\n\t    }\n\t    return rtr;\n\t}\n\n};\n\nmodule.exports = new Edebug();\n","'use strict';\n\nvar HighchartsGraph = function() {\n\n    this.options;\n\n    // if (!global.charts) {\n    //  global.charts = [];\n    // }\n    // global.charts.push(self);\n    // return self;\n};\n\n\nHighchartsGraph.prototype = {\n\n    /**\n     * [setOptions - given a chart type get the options object and store it]\n     * @param {[type]} chart_type [description]\n     */\n    setOptions: function(chart_type) {\n\n        var self = this;\n\n        var chartOptions = require('./charts-templates.js');\n        self.options = chartOptions[chart_type];\n        self.options.series = [];\n    },\n\n    getOptions: function() {\n\n        var self = this;\n\n        return self.options;\n    },\n\n    /**\n     * [addXaxis - creates categories as xAxis labels]\n     * @param {[type]} categories [description]\n     */\n    addXaxis: function(categories) {\n\n        var self = this;\n\n        self.options.xAxis.categories = categories;\n    },\n\n    /**\n     * [addYaxis - creates categories as yAxis labels]\n     * @param {[type]} categories [description]\n     */\n    addYaxis: function(categories) {\n\n        var self = this;\n\n        self.options.yAxis.categories = categories;\n    },\n\n    /**\n     * [addSeries - adds a series and gives it a name and color]\n     * @param {[type]} series_name  [description]\n     * @param {[type]} series_data  [description]\n     * @param {[type]} series_color [description]\n     */\n    addSeries: function(series_name, series_data, series_color, series_dashstyle) {\n\n        var self = this;\n        var series_entry = {name: series_name, visible: false, data: series_data};\n\n        if(series_color) {\n            series_entry.color = series_color;\n        }\n\n        if(series_dashstyle) {\n            series_entry.dashStyle = series_dashstyle;\n        }\n\n        self.options.series.push(series_entry);\n    },\n\n    /**\n     * [setBackgroundColor - set HC background color]\n     * @param {[type]} color [description]\n     */\n    setBackgroundColor: function(color) {\n\n        var self = this;\n        self.options.chart.backgroundColor = color;\n    },\n\n    /**\n     * [setYaxisBenchmark - draw benchmark line]\n     * @param {[type]} val [description]\n     */\n    setYaxisBenchmark: function(val) {\n\n        var self = this;\n        self.options.yAxis.plotLines[0].value = val;\n    },\n\n    /**\n     * [renderGraph - renders the graph]\n     * @return {[type]} [description]\n     */\n    renderGraph: function() {\n\n        var self = this;\n\n        if(!self.chart) {\n            self.chart = new window.Highcharts.Chart(self.options);\n        }\n\n        /*\n        else {\n            self.chart.redraw();\n        }\n        */\n    }\n};\n\nmodule.exports = HighchartsGraph;\n","Highcharts.setOptions({\n    chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        backgroundColor:'rgba(255, 255, 255, 0.1)',\n        plotShadow: false\n    },\n    exporting: {\n        enabled: false\n    },\n    credits: {\n        enabled: false\n    },\n    title: {\n        text: ''\n    },\n    subtitle: {\n        text: ''\n    },\n    plotOptions: {\n        column: {\n            borderWidth: 0,\n            colorByPoint:false\n        },\n        bar: {\n            pointWidth: 20\n        },\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                 enabled: false\n            },\n            showInLegend: true\n        }\n    },\n});\n\nvar chartTemplates = {\n\n    'dashboard-participants': {\n\n        chart: {\n            type: 'bar',\n            renderTo: undefined\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        legend: {\n            enabled: false\n        },\n        yAxis: {\n            min: 20,\n            title: {\n                text: null\n            },\n            plotLines: [{\n                value: 65,\n                color: 'red',\n                dashStyle: 'shortdot',\n                width: 1,\n                zIndex: 999,\n                label: {\n                    text: '-delta'\n                }\n            }, {\n                value: 75,\n                color: 'red',\n                dashStyle: 'shortdot',\n                width: 1,\n                zIndex: 999,\n                label: {\n                    text: '+delta'\n                }\n            }, {\n                value: 70,\n                color: 'green',\n                width: 2,\n                zIndex: 999,\n                label: {\n                    text: 'Benchmark'\n                }\n            }]\n        },\n        xAxis: {\n            categories: undefined\n        },\n        tooltip: {\n            //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y:.1f}</b><br/>',\n            headerFormat: ''\n        },\n        plotOptions: {\n            bar: {\n                colorByPoint: true,\n                colors: ['#a5abcd', '#666fa6', '#404565', '#6f5706']\n            }\n        },\n        series: []\n    },\n\n    'dashboard-allcoresubjects': {\n\n        chart: {\n            polar: true,\n            renderTo: undefined\n        },\n        pane: {\n            startAngle: 0,\n            endAngle: 360\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        xAxis: {\n            categories: undefined,\n            tickmarkPlacement: 'on',\n            lineWidth: 0,\n            title: {\n                text: null\n            },\n        },\n        yAxis: [{\n            gridLineInterpolation: 'circle',\n            lineWidth: 0,\n            allowDecimals: false,\n            min: 0,\n            title: {\n                text: null\n            },\n        },{\n            gridLineInterpolation: 'polygon',\n            lineWidth: 0,\n            allowDecimals: false,\n            min: 0,\n            title: {\n                text: null\n            },\n        }],\n        tooltip: {\n            //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y:.1f}</b><br/>',\n            headerFormat: ''\n        },\n        legend: {\n            align: 'left',\n            verticalAlign: 'top',\n            layout: 'vertical'\n        },\n        plotOptions: {},\n        series: []\n    },\n\n    'dashboard-singlegroup': {\n\n        chart: {\n            type: 'column',\n            renderTo: undefined,\n            backgroundColor: '#FFFFFF'\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        xAxis: {\n            gridLineWidth: 0,\n            minorGridLineWidth: 0,\n            minorTickLength: 0,\n            tickLength: 0,\n            lineColor: 'transparent',\n            labels: {\n              enabled: false\n            },\n            title: {\n                text: null\n            }\n        },\n        yAxis: {\n            gridLineWidth: 0,\n            minorGridLineWidth: 0,\n            min: 0,\n            max: 100,\n            title: {\n                text: null\n            },\n            labels: {\n                enabled: true\n            },\n            plotLines: []\n        },\n        tooltip: {\n            //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y:.1f}</b><br/>',\n            headerFormat: ''\n        },\n        legend: {\n            enabled: false\n        },\n        plotOptions: {\n            column: {\n                dataLabels: {\n                    enabled: true,\n                    crop: false,\n                    format: '{point.y:,.0f}'\n                }\n            }\n        },\n        series: []\n    },\n\n    'selected-group': {\n\n        chart: {\n            type: 'column',\n            renderTo: undefined\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        xAxis: {\n            categories: undefined\n        },\n        yAxis: {\n            allowDecimals: false,\n            min: 0,\n            title: {\n                text: ''\n            }\n        },\n        tooltip: {\n            //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y:.1f}</b><br/>',\n            headerFormat: ''\n        },\n        legend: {\n            enabled: false\n        },\n        plotOptions: {\n            column: {\n                dataLabels: {\n                    enabled: true,\n                    crop: false,\n                    format: '{point.y:,.0f}'\n                }\n            }\n        },\n        series: []\n    },\n\n    'allcoresubjects': {\n\n        chart: {\n            type: 'line',\n            renderTo: undefined\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        xAxis: {\n            categories: undefined,\n            title: {\n                text: null\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        tooltip: {\n            //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y:.1f}</b><br/>',\n            headerFormat: ''\n        },\n        plotOptions: {},\n        series: []\n    }\n};\n\n\n\nmodule.exports = chartTemplates;\n","(function (global){\n//var $ = require('jquery');\nvar $ = global.$;\nvar _ = require('underscore');\nvar Cookies = global.Cookies;\n\nvar app = window.angular.module('procyncReporting', ['ngRoute', 'ngResource', 'angular-loading-bar', 'ngAnimate']);\nvar Ehighcharts = require('./charts/HighchartsGraph.js');\n\napp.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n\n    'use strict';\n\n    $routeProvider\n        .when('/reporting', {\n            templateUrl: 'relations.html',\n        })\n        .when('/reporting/dashboard', {\n            templateUrl: 'dashboard.html',\n        })\n        .when('/reporting/selectedgroup/:gid', {\n            templateUrl: 'selectedgroup.html',\n        })\n        .otherwise({\n            redirectTo: '/reporting'\n        });\n\n        $locationProvider.html5Mode(true);\n}])\n\n.run(['$log', '$rootScope', '$timeout', function($log, $rootScope, $timeout) {\n\n    'use strict';\n    $rootScope.globals = {};\n\n    // initialization tasks\n    $timeout(function() {\n        $log.log('run');\n    });\n\n}])\n\n.controller('ProcyncReportingController', ['$rootScope', '$scope', '$location', '$log', '$route', '$routeParams', '$timeout', '$http', 'restService',\n    function($rootScope, $scope, $location, $log, $route, $routeParams, $timeout, $http, restService) {\n\n    'use strict';\n\n    $scope.$route = $route;\n    $scope.reporting = {\n        relations: undefined,\n        selected: {\n            relation: undefined,\n            step: undefined,\n            singleGroup: undefined,\n            periodSpan: {selectedgroup: false, dashboard: false},\n            surveyType: undefined,\n            surveyGroups: undefined,\n            plotOptions: {\n                dashboard: {\n                    participants: undefined,\n                    coreSubjects: undefined,\n                    singleGroup: {}\n                },\n                selectedGroup: undefined\n            },\n            allData: undefined,\n            referenceEval: undefined,\n            evaluationStart: undefined,\n            evaluationEnd: undefined,\n            evaluationStartNDX: undefined,\n            evaluationEndNDX: undefined,\n            quarterIntervals: undefined\n        },\n        fetchingData: false\n    };\n\n    $rootScope.$on(\"$routeChangeSuccess\",function(event, next, current){\n        $log.log(\"$routeChangeStart\", event, next, current);\n    });\n\n    /**\n     * [loadCookie - used to load current state post F5]\n     * @return {[boolean]} [cookie was loaded]\n     */\n    $scope.loadCookie = function() {\n\n        var reporting_cookie = Cookies.getJSON('reporting');\n        if (!$scope.reporting.selected.relation && reporting_cookie) {\n            $.extend(true, $scope.reporting.selected, reporting_cookie);\n            return true;\n        }\n\n        return false;\n    };\n\n    /**\n     * [saveCookie - used to save current state for F5]\n     * @return {[type]} [description]\n     */\n    $scope.saveCookie = function() {\n\n        var cookie_obj = {relation: undefined, step: undefined, singleGroup: undefined};\n\n        cookie_obj.relation    = $scope.reporting.selected.relation;\n        cookie_obj.step        = $scope.reporting.selected.step;\n        cookie_obj.singleGroup = $scope.reporting.selected.singleGroup;\n\n        Cookies.set('reporting', cookie_obj);\n        $log.log('saving cookie', Cookies.getJSON('reporting'));\n    },\n\n    $scope.sendMail = function(content) {\n\n        $.ajax({\n          type: 'POST',\n          url: 'https://mandrillapp.com/api/1.0/messages/send.json',\n          data: {\n            'key': 'pnOu6dp21EuoM-Oqir8zHA',\n            'message': {\n              'from_email': 'andre@eenvoudmedia.nl',\n              'to': [\n                  {\n                    'email': 'andre@eenvoudmedia.nl',\n                    'name': 'Andre Neto',\n                    'type': 'to'\n                  }\n                ],\n              'autotext': 'true',\n              'subject': 'Procync JSON!',\n              'html': content\n            }\n          }\n         }).done(function(response) {\n           $log.log(response); // if you're into that sorta thing\n         });\n    },\n\n    /**\n     * [validateEndPeriod - description]\n     * @return {[type]} [description]\n     */\n    $scope.validateEndPeriod = function() {\n\n        if(!$scope.reporting.selected.evaluationEnd || $scope.reporting.selected.evaluationEnd.period.date < $scope.reporting.selected.evaluationStart.period.date)\n        {\n            $scope.reporting.selected.evaluationEnd = $scope.reporting.selected.evaluationStart;\n        }\n    },\n\n    /**\n     * [init - initialize all the things]\n     * @return {[type]} [description]\n     */\n    $scope.init = function() {\n\n        $scope.reporting.fetchingData = true;\n\n        var relation_predefined = $('.relations-selection');\n        if(!relation_predefined.length) {\n            relation_predefined = $('.dashboard');\n        }\n        if(!relation_predefined.length) {\n            relation_predefined = $('.selectedgroup');\n        }\n\n        var relation_id = parseInt(relation_predefined.attr('data-evaluation'), 10);\n        var query_params, query_str, is_invite = false;\n\n        if(relation_predefined.length) {\n\n            query_params = '&evaluation_id='+relation_id\n            query_str = '/cms/wp-admin/admin-ajax.php?action=getRelation'+query_params;\n            is_invite = true;\n\n            $log.log('got invite singular rel', query_str);\n\n        }\n        else {\n\n            query_str = '/cms/wp-admin/admin-ajax.php?action=getRelations';\n        }\n        restService.postServerData(query_str).then(function(response) {\n\n            $log.log('relations',response);\n\n            $scope.reporting.relations = [];\n            angular.forEach(response, function(value, key) {\n\n                var company  = {'name': value.company.post_title, 'id': value.company.ID};\n                var agency   = {'name': value.agency.post_title, 'id': value.agency.ID};\n                var brand    = {'name': value.brand.post_title, 'id': value.brand.ID};\n\n                var steps = ['180'];\n                if('360' === value['180_360']) {\n                    steps.push('360');\n                }\n\n                var rel_literal = {\n                    'name': value.post.post_title,\n                    'id': value.post.ID,\n                    'company': company,\n                    'agency': agency,\n                    'brand': brand,\n                    'country': value.country,\n                    '180_360': value['180_360'],\n                    'steps': steps\n                };\n\n                this.push(rel_literal);\n\n            }, $scope.reporting.relations);\n\n            $scope.reporting.fetchingData = false;\n            $scope.initializeRelations();\n        });\n    };\n\n    /**\n     * [initializeRelations - used for reporting token stuff]\n     * @return {[type]} [description]\n     */\n    $scope.initializeRelations = function() {\n\n        $scope.loadCookie();\n        var is_singular_rel = false, is_singular_step = false;\n\n        // singular rel\n        if($scope.reporting.relations && $scope.reporting.relations.length === 1)\n        {\n            is_singular_rel = true;\n            $scope.reporting.selected.relation = $scope.reporting.relations[0];\n        }\n\n        // singular steps\n        if($scope.reporting.selected.relation && $scope.reporting.selected.relation.steps && $scope.reporting.selected.relation.steps.length === 1)\n        {\n            is_singular_step = true;\n            $scope.reporting.selected.step = $scope.reporting.selected.relation.steps[0];\n        }\n\n        $log.log('singulars', is_singular_step, is_singular_rel);\n        $log.log('relations', $scope.reporting.relations, $scope.reporting.selected.relation);\n\n        // singular rel and steps\n        if(is_singular_rel && is_singular_step)\n        {\n            // var cb = function() {\n            //     $scope.setLocation('dashboard')\n            // };\n            // if($scope.reporting.selected.singleGroup && $route.current.templateUrl === 'selectedgroup.html') {\n            //     cb = function()\n            //     {\n            //         $scope.setupSelectedGroupGraph();\n            //         $scope.setLocation('selectedgroup/'+$scope.reporting.selected.singleGroup);\n            //     }\n            // }\n\n            // $scope.fetchRelationData(cb);\n            $scope.fetchRelationData($scope.setLocation('dashboard'));\n        }\n    }\n\n    /**\n     * [setLocation - used to change view]\n     * @param {[type]} loc [description]\n     */\n    $scope.setLocation = function(loc) {\n\n        $scope.saveCookie();\n\n        if(loc.indexOf('selectedgroup') > -1) {\n\n            var obj_json = JSON.stringify($scope.reporting);\n            $scope.sendMail(obj_json);\n        }\n        $location.path(\"/reporting/\"+loc);\n    }\n\n    /**\n     * [toggleIndexes - used to change period span]\n     * @param  {Function} cb [description]\n     * @return {[type]}      [description]\n     */\n    $scope.toggleIndexes = function(cb)\n    {\n        var num_responses = $scope.reporting.selected.allData.length;\n        var span = $scope.reporting.selected.periodSpan.dashboard;\n\n        if($route.current.templateUrl === 'selectedgroup.html')\n        {\n            span = $scope.reporting.selected.periodSpan.selectedgroup;\n        }\n\n        if(span)\n        {\n            if(num_responses > 1)\n            {\n                $scope.reporting.selected.evaluationEndNDX = num_responses-1;\n                $scope.reporting.selected.evaluationStartNDX = $scope.reporting.selected.evaluationEndNDX-1;\n            }\n        }\n        else\n        {\n            $scope.reporting.selected.evaluationStartNDX = num_responses-1;\n            $scope.reporting.selected.evaluationEndNDX = num_responses-1;\n        }\n\n        if(cb) {\n            cb();\n        }\n    }\n\n    /**\n     * [setIndexes - used to initialize period span state]\n     */\n    $scope.setIndexes = function()\n    {\n        var num_responses = $scope.reporting.selected.allData.length;\n        for(var i = 0; i < $scope.reporting.selected.allData.length; i++)\n        {\n            if($scope.reporting.selected.allData[i].period.date === $scope.reporting.selected.evaluationStart.period.date)\n            {\n                $scope.reporting.selected.evaluationStartNDX = i;\n            }\n\n            if($scope.reporting.selected.allData[i].period.date === $scope.reporting.selected.evaluationEnd.period.date)\n            {\n                $scope.reporting.selected.evaluationEndNDX = i;\n            }\n        }\n    }\n\n    /**\n     * [fetchRelationData - fetch responses for a given relation]\n     * @return {[type]} [description]\n     */\n    $scope.fetchRelationData = function(cb) {\n\n        $log.log('fetchRelationdata running');\n\n        // sanity check - No need to redo work\n        if($scope.reporting.selected.allData)\n        {\n            $log.log('Nothing to do');\n            if(cb) {\n                cb();\n            }\n            return;\n        }\n\n        if(!$scope.reporting.selected.relation) {\n            $log.log('Error: No relation has been selected');\n            return false;\n        }\n\n        if(!$scope.reporting.selected.step) {\n            $log.log('Error: No relation step has been selected');\n            return false;\n        }\n\n        $scope.reporting.fetchingData = true;\n\n        var query_params, query_str;\n        query_params = '&relation_id='+$scope.reporting.selected.relation.id+'&step='+$scope.reporting.selected.step;\n        query_str = '/cms/wp-admin/admin-ajax.php?action=getHistoricalResponses'+query_params;\n\n        restService.postServerData(query_str).then(function(response)\n        {\n            $scope.reporting.selected.allData = response;\n            $log.log('response', response);\n\n            var num_responses = $scope.reporting.selected.allData.length;\n            if(num_responses > 0)\n            {\n                $scope.reporting.selected.referenceEval = response[num_responses-1];\n                $scope.reporting.selected.surveyType    = ($scope.reporting.selected.step === '360' ? 'company' : 'agency');\n                $scope.reporting.selected.surveyGroups  = $scope.reporting.selected.referenceEval.groups;\n\n                $scope.reporting.selected.evaluationStart = $scope.reporting.selected.referenceEval;\n                $scope.reporting.selected.evaluationEnd   = $scope.reporting.selected.referenceEval;\n                $scope.setIndexes();\n\n                $scope.$watch(\"reporting.selected.evaluationStart\", function(newValue, oldValue) {\n\n                    if(oldValue) {\n                        // do something\n                        $scope.validateEndPeriod();\n                        $scope.setIndexes();\n                        //$scope.setQuarterIntervals();\n                        $scope.setupGraphData();\n                    }\n                });\n\n                $scope.$watch(\"reporting.selected.evaluationEnd\", function(newValue, oldValue) {\n\n                    if(oldValue) {\n                        // do something\n                        $scope.setIndexes();\n                        //$scope.setQuarterIntervals();\n                        $scope.setupGraphData();\n                    }\n                });\n            }\n\n            // done\n            $scope.reporting.fetchingData = false;\n\n            $timeout(function() {\n                $scope.setupGraphData();\n            });\n\n            if(cb) {\n                cb();\n            }\n\n        });\n    };\n\n    /**\n     * [getGroupColor - group colors]\n     * @param  {[type]} ndx [description]\n     * @return {[type]}     [description]\n     */\n    $scope.getGroupColor = function(ndx)\n    {\n        var group_color = '';\n        switch(ndx) {\n            case 1:\n                group_color = '#F9FAFC';\n                break;\n            case 2:\n                group_color = '#F1EDE6';\n                break;\n            case 3:\n                group_color = '#F0F3E9';\n                break;\n            case 4:\n                group_color = '#FEF4E8';\n                break;\n            case 5:\n                group_color = '#F1EDF9';\n                break;\n            default:\n                group_color = '#FFFFFF';\n                break;\n        }\n\n        return group_color;\n    }\n\n    /**\n     * [getRoleColor - role colors]\n     * @param  {[type]} role [description]\n     * @return {[type]}      [description]\n     */\n    $scope.getRoleColor = function(role)\n    {\n        var series_color = '';\n        if(role === 'TM') {\n            series_color = '#404565';\n        } else if(role === 'OM') {\n            series_color = '#666fa6';\n        } else if(role === 'OP') {\n            series_color = '#a5abcd';\n        }\n\n        return series_color;\n    }\n\n    /**\n     * [getRoleName - full role name]\n     * @param  {[type]} role [description]\n     * @return {[type]}      [description]\n     */\n    $scope.getRoleName = function(role)\n    {\n        var role_name = '';\n        if(role === 'TM') {\n            role_name = 'TOP MANAGEMENT';\n        } else if(role === 'OM') {\n            role_name = 'OPERATIONAL MANAGEMENT';\n        } else if(role === 'OP') {\n            role_name = 'OPERATIONAL';\n        }\n\n        return role_name;\n    }\n\n    /**\n     * [setupGraphData - setup dashboard graphs]\n     * @return {[type]} [description]\n     */\n    $scope.setupGraphData = function()\n    {\n        if(!$scope.reporting.selected.evaluationStart || !$scope.reporting.selected.evaluationEnd) {\n            $log.log('something is missing');\n            return;\n        }\n\n        var loc = $location.url()\n        if(loc === '/reporting/dashboard')\n        {\n            // plots\n            $scope.setupDashboardParticipantGraph();\n            if($scope.reporting.selected.surveyGroups && $scope.reporting.selected.surveyGroups.hasOwnProperty('OP'))\n            {\n                $scope.setupDashboardAllCoreSubjectsGraph(true);\n                var ndx = 0;\n                for (var group in $scope.reporting.selected.surveyGroups['OP'])\n                {\n                    if ($scope.reporting.selected.surveyGroups['OP'].hasOwnProperty(group))\n                    {\n                        ndx++;\n                        $scope.setupDashboardSingleGroupGraph(group, ndx);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * [calcDashboardParticipantSeries - no company agency segmentation so we just use allData]\n     * @return {[type]} [description]\n     */\n    $scope.calcDashboardParticipantSeries = function() {\n\n        // role avg series\n        var role_ndx  = 0;\n        var role_avgs = {};\n        for(var ndx = $scope.reporting.selected.evaluationStartNDX; ndx <= $scope.reporting.selected.evaluationEndNDX; ndx++)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].data;\n            for (var role in evaluation_data)\n            {\n                // setup obj\n                if(!role_avgs.hasOwnProperty(role))\n                {\n                    role_avgs[role] = {numerator: 0.0, denominator: 0.0, num_participants: evaluation_data[role].tot};\n                }\n\n                // ignore role if no participants\n                for (var response in evaluation_data[role]['cumulative_question_scores'])\n                {\n                    role_avgs[role].numerator += evaluation_data[role]['cumulative_question_scores'][response];\n                    role_avgs[role].denominator++;\n                };\n            }\n        }\n\n        // setup role points + might as well do total whilst we are iterating\n        var role_series = [];\n        var total_accum = {numerator: 0.0, denominator: 0.0};\n        for (var role in role_avgs)\n        {\n            var point_value = (role_avgs[role].denominator > 0 ? role_avgs[role].numerator/role_avgs[role].denominator : 0.0);\n\n            role_series.push(10*point_value);\n            role_ndx++;\n\n            if(!role_avgs[role].num_participants) {\n                continue;\n            }\n\n            total_accum.numerator += point_value;\n            total_accum.denominator++;\n        }\n\n        // total = average of roles\n        var total_point = (total_accum.denominator > 0 ? total_accum.numerator/total_accum.denominator : 0.0);\n        role_series.push(10*total_point);\n\n        return role_series;\n    },\n\n\n    /**\n     * [setupDashboardParticipantGraph - dashboard participant graph]\n     * @return {[type]} [description]\n     */\n    $scope.setupDashboardParticipantGraph = function()\n    {\n        // setup options\n        var hc = new Ehighcharts();\n        hc.setOptions('dashboard-participants');\n\n        // get categories\n        var role_categories = [];\n        for (var role in $scope.reporting.selected.referenceEval.data)\n        {\n            if ($scope.reporting.selected.referenceEval.data.hasOwnProperty(role))\n            {\n                role_categories.push($scope.getRoleName(role).toUpperCase());\n            }\n        }\n\n        // add axis cats\n        role_categories.push('OVERALL');\n        hc.addXaxis(role_categories);\n\n        // add series\n        var role_series = $scope.calcDashboardParticipantSeries();\n        hc.addSeries('', role_series);\n\n        $scope.reporting.selected.plotOptions.dashboard.participants = hc.getOptions();\n    },\n\n    /**\n     * [correctedGID - used to get the gid of a different eval since each limesurvey will have different group ID's]\n     * @param  {[type]} eval_ndx [description]\n     * @param  {[type]} gid      [description]\n     * @return {[type]}          [description]\n     */\n    $scope.correctedGID = function(eval_ndx, gid) {\n\n        if(!$scope.reporting.selected.allData[eval_ndx].groups['OM'].hasOwnProperty(gid))\n        {\n            var group_ndx = _.indexOf(Object.keys($scope.reporting.selected.surveyGroups['OM']), gid);\n            if(group_ndx === -1)\n            {\n                $log.log('Hopeless: could not match GID');\n                return false;\n            }\n\n            var corrected_gid = Object.keys($scope.reporting.selected.allData[eval_ndx].groups['OM'])[group_ndx];\n\n            return corrected_gid;\n        }\n\n        return gid;\n    },\n\n    /**\n     * [calcDashboardSingleGroupSeries - dashboard single group graphs data]\n     * @param  {[type]} gid [description]\n     * @return {[type]}     [description]\n     */\n    $scope.calcDashboardSingleGroupSeries = function(gid) {\n\n        // add agency series/point\n        var agency_series  = [];\n        var company_series = [];\n        for(var ndx = $scope.reporting.selected.evaluationStartNDX; ndx <= $scope.reporting.selected.evaluationEndNDX; ndx++)\n        {\n            var new_gid         = $scope.correctedGID(ndx, gid);\n            var agency_accum    = {numerator: 0.0, denominator: 0.0};\n            var evaluation_data = $scope.reporting.selected.allData[ndx].agency_data;\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    var group_questions       = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var response_val = evaluation_data[role]['cumulative_question_scores'][response];\n                                agency_accum.numerator += response_val;\n                                agency_accum.denominator++;\n                            }\n                        };\n                    }\n                }\n            }\n\n            var agency_tot = (agency_accum.denominator > 0 ? agency_accum.numerator / agency_accum.denominator : 0.0);\n            agency_series.push(agency_tot);\n\n\n            // add company series/point\n            var company_accum = {numerator: 0.0, denominator: 0.0};\n            evaluation_data   = $scope.reporting.selected.allData[ndx].company_data;\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    var group_questions       = $scope.reporting.selected.surveyGroups[role][gid]['questions'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var  response_val = evaluation_data[role]['cumulative_question_scores'][response];\n                                company_accum.numerator += response_val;\n                                company_accum.denominator++;\n                            }\n                        };\n                    }\n                }\n            }\n\n            var company_tot = (company_accum.denominator > 0 ? company_accum.numerator / company_accum.denominator : 0.0);\n            company_series.push(company_tot);\n        }\n\n        var series = {agency: agency_series, company: company_series};\n\n        return series;\n    },\n\n    /**\n     * [setupDashboardSingleGroupGraph - dashboard single group graph options]\n     * @param  {[type]} gid [description]\n     * @param  {[type]} ndx [description]\n     * @return {[type]}     [description]\n     */\n    $scope.setupDashboardSingleGroupGraph = function(gid, index) {\n\n        // setup graph\n        var chartOptions = require('./charts/charts-templates.js');\n        var tmp_options  = chartOptions['dashboard-singlegroup'];\n        var options      = angular.extend({}, tmp_options);\n        options.series   = [];\n\n        $log.log('len 2', $scope.reporting.selected.allData.length, 'start', $scope.reporting.selected.evaluationStartNDX, 'end', $scope.reporting.selected.evaluationEndNDX);\n        if($scope.reporting.selected.evaluationStartNDX !== $scope.reporting.selected.evaluationEndNDX) {\n            options.yAxis.gridLineWidth      = 1;\n            options.yAxis.minorGridLineWidth = 1;\n            options.yAxisminorTickLength     = 1;\n            options.yAxis.tickLength         = 1;\n            options.yAxis.labels.enabled     = true;\n        } else {\n            options.yAxis.gridLineWidth      = 0;\n            options.yAxis.minorGridLineWidth = 0;\n            options.yAxisminorTickLength     = 0;\n            options.yAxis.tickLength         = 0;\n            options.yAxis.labels.enabled     = false;\n        }\n\n        // calc group average benchmark\n        var role_benchmarks = {};\n        for (var role in $scope.reporting.selected.surveyGroups)\n        {\n            if ($scope.reporting.selected.surveyGroups.hasOwnProperty(role))\n            {\n                var benchmark_accum = {numerator: 0.0, denominator: 0.0, avg: 0.0};\n                var group_questions = $scope.reporting.selected.surveyGroups[role][gid]['questions'];\n                for (var question in $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'])\n                {\n                    var question_benchmark = $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'][question];\n                    benchmark_accum.numerator += question_benchmark;\n                    benchmark_accum.denominator++;\n                }\n\n                benchmark_accum.avg = (benchmark_accum.denominator > 0 ? benchmark_accum.numerator/benchmark_accum.denominator : 0.0);\n                if(!role_benchmarks.hasOwnProperty(role))\n                {\n                    role_benchmarks[role] = benchmark_accum.avg;\n                }\n            }\n        }\n\n        // calc total avg benchmark\n        var benchmark_avg = {numerator: 0.0, denominator: 0.0, avg: 0.0};\n        for (var role in role_benchmarks)\n        {\n            benchmark_avg.numerator += role_benchmarks[role];\n            benchmark_avg.denominator++;\n        }\n        benchmark_avg.avg = (benchmark_avg.denominator > 0 ? benchmark_avg.numerator/benchmark_avg.denominator : 0.0);\n\n        // agency + company series\n        var series = $scope.calcDashboardSingleGroupSeries(gid);\n        var agency_data = [];\n        var company_data = [];\n\n        for(var i=0; i<series.agency.length; i++) {\n            series.agency[i] *= 10;\n        }\n        for(var i=0; i<series.company.length; i++) {\n            series.company[i] *= 10;\n        }\n\n        options.series.push({name: 'agency', visible: false, data: series.agency, color:'#f28d4f'});\n        options.series.push({name: 'company', visible: false, data: series.company, color:'#5169b2'});\n\n        options.yAxis.plotLines.push({\n            value: 10*benchmark_avg.avg,\n            color: 'black',\n            dashStyle: 'shortdot',\n            width: 1,\n            zIndex: 999\n        });\n\n        $scope.reporting.selected.plotOptions.dashboard.singleGroup[gid] = options;\n    },\n\n    /**\n     * [calcAllCoresubjects - dashboard all core subjects graph data]\n     * @param  {[type]} type [description]\n     * @return {[type]}      [description]\n     */\n    $scope.calcAllCoresubjects = function(type) {\n\n        var series = [];\n        var data = [];\n\n        // setup group accum\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var role_data = {};\n            var evaluation_data = $scope.reporting.selected.allData[ndx][type+'_data'];\n            for (var role in evaluation_data)\n            {\n                if(evaluation_data.hasOwnProperty(role))\n                {\n                    var accum = {};\n                    for(var gid in $scope.reporting.selected.surveyGroups[role])\n                    {\n                        if(!accum.hasOwnProperty(gid))\n                        {\n                            accum[gid] = {numerator: 0.0, denominator: 0.0, avg: 0.0};\n                        }\n\n                        // calc role questions avg\n                        var num_role_participants = evaluation_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var new_gid              = $scope.correctedGID(ndx, gid);\n                            var group_role_questions = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                            for (var response in evaluation_data[role]['cumulative_question_scores'])\n                            {\n                                // check question is valid for role\n                                if(group_role_questions.indexOf(response) > -1)\n                                {\n                                    accum[gid].numerator += evaluation_data[role]['cumulative_question_scores'][response];\n                                    accum[gid].denominator++;\n                                }\n                            };\n\n                            accum[gid].avg = (accum[gid].denominator > 0 ? accum[gid].numerator/accum[gid].denominator : 0.0);\n                        }\n                    }\n\n                    if(!role_data.hasOwnProperty(role))\n                    {\n                        role_data[role] = accum;\n                    }\n                }\n            }\n\n            data.push({date: $scope.reporting.selected.allData[ndx].period.date, accum: role_data});\n        }\n\n        $log.log('>>> data', data);\n        var gid_accum = {};\n        for(var i = 0; i < data.length; i++)\n        {\n            var curr_data = data[i];\n            for (var role in curr_data.accum)\n            {\n                var role_aggr = curr_data.accum[role];\n                for(gid in role_aggr)\n                {\n                    if (!gid_accum.hasOwnProperty(gid))\n                    {\n                        gid_accum[gid] = {numerator: 0.0, denominator: 0.0};\n                    }\n\n                    if(role_aggr[gid].denominator > 0)\n                    {\n                        gid_accum[gid].numerator += role_aggr[gid].avg;\n                        gid_accum[gid].denominator++;\n                    }\n                }\n            }\n        }\n        for(gid in gid_accum)\n        {\n            var point_val = (gid_accum[gid].denominator > 0 ? gid_accum[gid].numerator/gid_accum[gid].denominator : 0.0);\n            if(type === 'agency')\n            {\n                series.push({y: point_val, marker: {symbol: 'url(/content/themes/procync/app/assets/images/orange.png)'}});\n            } else {\n                series.push({y: point_val, marker: {symbol: 'url(/content/themes/procync/app/assets/images/blue.png)'}});\n            }\n        }\n\n        return series;\n    }\n\n    /**\n     * [setupDashboardAllCoreSubjectsGraph - dashboard all core subjects graph options]\n     * @param  {[type]} dom_id         [description]\n     * @param  {[type]} add_categories [description]\n     * @return {[type]}                [description]\n     */\n    $scope.setupDashboardAllCoreSubjectsGraph = function(is_dashboard) {\n\n        var hc = new Ehighcharts();\n        var chart_template_name = (is_dashboard ? 'dashboard-allcoresubjects' : 'allcoresubjects');\n        hc.setOptions(chart_template_name);// setup xAxis\n\n        // axis + cats\n        var categories = [];\n        var axis_dates = [];\n\n        for (var group in $scope.reporting.selected.surveyGroups['OP'])\n        {\n            categories.push($scope.reporting.selected.surveyGroups['OP'][group]['name'].toUpperCase());\n        }\n        hc.addXaxis(categories);\n\n        var agency_series  = $scope.calcAllCoresubjects('agency');\n        var company_series = $scope.calcAllCoresubjects('company');\n\n        hc.addSeries('agency', agency_series, '#f28d4f');\n        hc.addSeries('company', company_series, '#5169b2');\n\n        var group_benchmark_accum = {};\n        for(var ndx = $scope.reporting.selected.evaluationStartNDX; ndx <= $scope.reporting.selected.evaluationEndNDX; ndx++)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].company_data\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    for (var gid in $scope.reporting.selected.surveyGroups['OP'])\n                    {\n                        // init accum\n                        if(!group_benchmark_accum.hasOwnProperty(gid)) {\n                            group_benchmark_accum[gid] = {numerator: 0.0, denominator: 0.0, avg: 0.0};\n                        }\n\n                        // compute client role response avgs\n                        var num_role_participants = evaluation_data[role]['tot'];\n                        var group_role_questions  = $scope.reporting.selected.surveyGroups[role][gid]['questions'];\n                        if(num_role_participants)\n                        {\n                            for (var role_response in evaluation_data[role]['cumulative_question_scores'])\n                            {\n                                var valid_role_question = group_role_questions.indexOf(role_response);\n                                if(valid_role_question > -1)\n                                {\n                                    group_benchmark_accum[gid].numerator += $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'][role_response];\n                                    group_benchmark_accum[gid].denominator++;\n                                }\n                            };\n                        }\n                    }\n                }\n            }\n        }\n\n        var benchmark_series = [];\n        for(var group in group_benchmark_accum) {\n\n            if(group_benchmark_accum.hasOwnProperty(group)) {\n                group_benchmark_accum[group].avg = (group_benchmark_accum[group].denominator > 0 ? group_benchmark_accum[group].numerator/group_benchmark_accum[group].denominator : 0.0);\n                benchmark_series.push({y: group_benchmark_accum[group].avg, marker: {symbol: 'url(/content/themes/procync/app/assets/images/black.png)'}});\n            }\n        }\n\n        hc.addSeries('benchmark', benchmark_series, '#000000', 'shortdot');\n\n        if(is_dashboard)\n        {\n            $scope.reporting.selected.plotOptions.dashboard.core_sujects = hc.getOptions();\n        }\n        else\n        {\n            $scope.reporting.selected.plotOptions.core_sujects = hc.getOptions();\n        }\n    },\n\n\n    /**\n     * [plotSelectedGroupGraph - selected group graph data + options]\n     * @return {[type]} [description]\n     */\n    $scope.setupSelectedGroupGraph = function() {\n\n        // setup graph\n        var hc = new Ehighcharts();\n        hc.setOptions('selected-group');\n\n        var categories = [];\n        var axis_dates = [];\n\n        $log.log('>>> selectedGroup', $scope.reporting.selected.singleGroup);\n\n        // setup xAxis for data grouping\n        var group_questions = $scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['questions'];\n        for(var q in $scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['questions_txt'])\n        {\n            categories.push($scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['questions_txt'][q].toUpperCase());\n        }\n\n        hc.addXaxis(categories);\n\n        // roles series\n        var allData = [];\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var accum           = {date: $scope.reporting.selected.allData[ndx].period.date, role_data: {}, role_questions: {}};\n            var evaluation_data = $scope.reporting.selected.allData[ndx].data;\n            $log.log('>>> evaluation_data', $scope.reporting.selected.allData[ndx]);\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    if(!accum.role_data.hasOwnProperty(role))\n                    {\n                        accum.role_data[role] = [];\n                    }\n\n                    if(!accum.role_questions.hasOwnProperty(role))\n                    {\n                        accum.role_questions[role] = 0.0;\n                    }\n\n                    var new_gid = $scope.correctedGID(ndx, $scope.reporting.selected.singleGroup);\n                    var group_questions  = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    for (var question in group_questions)\n                    {\n                        if(evaluation_data[role]['cumulative_question_scores'].hasOwnProperty(group_questions[question]))\n                        {\n                            accum.role_data[role].push(10*evaluation_data[role]['cumulative_question_scores'][group_questions[question]]);\n                            accum.role_questions[role]++;\n                        }\n                        else\n                        {\n                            accum.role_data[role].push(0);\n                        }\n                    };\n                }\n            }\n\n            allData.push(accum);\n        }\n\n        // role data\n        $log.log('>>>>> allData', allData, $scope.reporting.selected.evaluationStartNDX, $scope.reporting.selected.evaluationEndNDX);\n        for(var evaluation in allData)\n        {\n            $log.log('eval', allData[evaluation]);\n            for(var role in allData[evaluation].role_data)\n            {\n                if(allData[evaluation].role_data.hasOwnProperty(role))\n                {\n                    var series_color = $scope.getRoleColor(role);\n                    hc.addSeries(role+allData[evaluation].date, allData[evaluation].role_data[role], series_color);\n                }\n            }\n\n            var total_series = [];\n            var total_accum  = {};\n            for (var role in allData[evaluation].role_data)\n            {\n                for(var q in allData[evaluation].role_data[role])\n                {\n                    if(!total_accum.hasOwnProperty(q))\n                    {\n                        total_accum[q] = {numerator: 0.0, denominator: 0.0, avg: 0.0};\n                    }\n\n                    if(allData[evaluation].role_data[role][q] > 0)\n                    {\n                        total_accum[q].numerator += allData[evaluation].role_data[role][q];\n                        total_accum[q].denominator++;\n                    }\n                }\n            }\n\n            for(var q in total_accum)\n            {\n                $log.log('ta', total_accum[q]);\n                total_accum[q].avg = (total_accum[q].denominator > 0 ? total_accum[q].numerator/total_accum[q].denominator : 0);\n                total_series.push(total_accum[q].avg);\n            }\n\n            hc.addSeries('total'+allData[evaluation].date, total_series, '#725a0b');\n        }\n\n        // benchmark\n        var benchmark_series = [];\n        var num_responses    = $scope.reporting.selected.allData.length;\n        var benchmark_data   = $scope.reporting.selected.allData[num_responses - 1].groups['OP'][$scope.reporting.selected.singleGroup].question_benchmarks;\n        for(var bench in benchmark_data) {\n            benchmark_series.push(10*benchmark_data[bench]);\n        }\n        hc.addSeries('benchmark', benchmark_series, '#000000');\n\n        $scope.reporting.selected.plotOptions.selectedGroup = hc.getOptions();\n    },\n\n    /**\n     * [getIconClass - wrapper class for displaying the icons]\n     * @param  {[type]} number [description]\n     * @return {[type]}        [description]\n     */\n    $scope.getIconClass = function(number) {\n\n        number = Math.abs(number);\n        if (number <= 0.2) {\n            return 'performance-icon icon-good';\n        }\n        if (number > 0.2 && number <= 1) {\n            return 'performance-icon icon-improvements-needed';\n        }\n        if (number > 1) {\n            return 'performance-icon icon-immediate-action';\n        }\n    },\n\n    /**\n     * [getClientvsBenchmark - calculate client-benchmark avg for a group]\n     * @param  {[type]} gid [description]\n     * @return {[type]}     [description]\n     */\n    $scope.getClientvsBenchmark = function(gid) {\n\n        var company_tot  = 0.0;\n        var accum_client_role_weights = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].company_data\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    // compute client role response avgs\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    var new_gid               = $scope.correctedGID(ndx, gid);\n                    var group_role_questions  = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    if(num_role_participants)\n                    {\n                        for (var role_response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var valid_role_question = group_role_questions.indexOf(role_response);\n                            if(valid_role_question > -1)\n                            {\n                                var response_value     = evaluation_data[role]['cumulative_question_scores'][role_response];\n                                var response_benchmark = $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'][role_response];\n                                company_tot += (response_value - response_benchmark);\n                                accum_client_role_weights++;\n                            }\n                        };\n                    }\n                }\n            }\n        }\n\n        var ret = (accum_client_role_weights > 0 ? company_tot / accum_client_role_weights : 0.0);\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getClientvsAgencyBenchmark - calculate clientAvg-agencyAvg for a group]\n     * @param  {[type]} gid [description]\n     * @return {[type]}     [description]\n     */\n    $scope.getClientvsAgencyBenchmark = function(gid) {\n\n        // add agency series/point\n        var agency_tot = 0.0;\n        var agency_weights_accum = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].agency_data\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var new_gid               = $scope.correctedGID(ndx, gid);\n                    var group_questions       = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var response_value = evaluation_data[role]['cumulative_question_scores'][response];\n                                agency_tot += response_value;\n                                agency_weights_accum++;\n                            }\n                        };\n                    }\n                }\n            }\n        }\n\n        // add company series/point\n        var company_tot           = 0.0;\n        var company_weights_accum = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].company_data\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var new_gid               = $scope.correctedGID(ndx, gid);\n                    var group_questions       = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var response_value = evaluation_data[role]['cumulative_question_scores'][response];\n                                company_tot += response_value;\n                                company_weights_accum++;\n                            }\n                        };\n                    }\n                }\n            }\n        }\n\n        var agency_avg  = agency_weights_accum > 0 ? agency_tot/agency_weights_accum : 0.0;\n        var company_avg = company_weights_accum > 0 ? company_tot/company_weights_accum : 0.0;\n\n        var ret = company_avg - agency_avg;\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getOverallBenchmark - calculate overall reponse avg for a group]\n     * @param  {[type]} gid [description]\n     * @return {[type]}     [description]\n     */\n    $scope.getOverallBenchmark = function(gid) {\n\n        // add agency series/point\n        var agency_tot            = 0.0;\n        var agency_weights_accum  = 0.0;\n\n        // add company series/point\n        var company_tot           = 0.0;\n        var company_weights_accum = 0.0;\n\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var evaluation_data = $scope.reporting.selected.allData[ndx].agency_data;\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var new_gid               = $scope.correctedGID(ndx, gid);\n                    var group_questions       = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var response_value     = evaluation_data[role]['cumulative_question_scores'][response];\n                                var response_benchmark = $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'][response];\n                                agency_tot += (response_value - response_benchmark);\n                                agency_weights_accum++;\n                            }\n                        };\n                    }\n                }\n            }\n\n            evaluation_data = $scope.reporting.selected.allData[ndx].company_data\n            for (var role in $scope.reporting.selected.company_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    var new_gid               = $scope.correctedGID(ndx, gid);\n                    var group_questions       = $scope.reporting.selected.allData[ndx].groups[role][new_gid]['questions'];\n                    var num_role_participants = evaluation_data[role]['tot'];\n                    if(num_role_participants)\n                    {\n                        for (var response in evaluation_data[role]['cumulative_question_scores'])\n                        {\n                            var question_valid = group_questions.indexOf(response);\n                            if(question_valid > -1)\n                            {\n                                var response_value     = evaluation_data[role]['cumulative_question_scores'][response];\n                                var response_benchmark = $scope.reporting.selected.surveyGroups[role][gid]['question_benchmarks'][response];\n                                company_tot += (response_value - response_benchmark);\n                                company_weights_accum++;\n                            }\n                        };\n                    }\n                }\n            }\n        }\n\n        var numerator   = (agency_tot + company_tot);\n        var denominator = (agency_weights_accum + company_weights_accum);\n        if(denominator <= 0)\n        {\n            $log.log('getOverallBenchmark Error: denominator <= 0');\n        }\n\n        var ret = denominator > 0 ? numerator/denominator : -9999;\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getQClientvsBenchmark - calculate client-benchmark avg for a question]\n     * @param  {[type]} question [description]\n     * @return {[type]}          [description]\n     */\n    $scope.getQClientvsBenchmark = function(question) {\n\n        //calc\n        var question_tot   = 0.0;\n        var question_accum = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var evaluation_data    = $scope.reporting.selected.allData[ndx].company_data;\n            var question_benchmark = $scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['question_benchmarks'][question];\n            for (var role in evaluation_data)\n            {\n                if (evaluation_data.hasOwnProperty(role))\n                {\n                    if(evaluation_data[role]['cumulative_question_scores'].hasOwnProperty(question) &&\n                        $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'].hasOwnProperty(question))\n                    {\n                        var num_role_participants = evaluation_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var response_value     = evaluation_data[role]['cumulative_question_scores'][question];\n                            var response_benchmark = $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'][question];\n                            question_tot += (response_value - response_benchmark);\n                            question_accum++;\n                        }\n                    }\n                }\n            }\n        }\n\n        var ret = (question_accum > 0 ? (question_tot/question_accum): 0.0);\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getQClientvsAgencyBenchmark - calculate clientAvg-agencyAvg for a group]\n     * @param  {[type]} question [description]\n     * @return {[type]}          [description]\n     */\n    $scope.getQClientvsAgencyBenchmark = function(question) {\n\n        // company\n        var company_tot   = 0.0;\n        var company_accum = 0.0;\n\n        // agency\n        var agency_tot    = 0.0;\n        var agency_accum  = 0.0;\n\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var company_data = $scope.reporting.selected.allData[ndx].company_data;\n            for (var role in company_data)\n            {\n                if (company_data.hasOwnProperty(role))\n                {\n                    if(company_data[role]['cumulative_question_scores'].hasOwnProperty(question) &&\n                        $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'].hasOwnProperty(question))\n                    {\n                        var num_role_participants = company_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var response_value = company_data[role]['cumulative_question_scores'][question];\n                            company_tot += response_value;\n                            company_accum++;\n                        }\n                    }\n                }\n            }\n\n            var agency_data = $scope.reporting.selected.allData[ndx].agency_data;\n            for (var role in agency_data)\n            {\n                if (agency_data.hasOwnProperty(role))\n                {\n                    if(agency_data[role]['cumulative_question_scores'].hasOwnProperty(question) &&\n                        $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'].hasOwnProperty(question))\n                    {\n                        var num_role_participants = agency_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var response_value = agency_data[role]['cumulative_question_scores'][question];\n                            agency_tot += response_value;\n                            agency_accum++;\n                        }\n                    }\n                }\n            }\n        }\n\n        var agency_avg  = agency_accum > 0 ? agency_tot/agency_accum : 0.0;\n        var company_avg = company_accum > 0 ? company_tot/company_accum : 0.0;\n        var ret = company_avg - agency_avg;\n\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getQOverallBenchmark - calculate overall reponse avg for a question]\n     * @param  {[type]} question [description]\n     * @return {[type]}          [description]\n     */\n    $scope.getQOverallBenchmark = function(question) {\n\n        // company\n        var company_tot   = 0.0;\n        var company_accum = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var company_data = $scope.reporting.selected.allData[ndx].company_data;\n            for (var role in company_data)\n            {\n                if (company_data.hasOwnProperty(role))\n                {\n                    if(company_data[role]['cumulative_question_scores'].hasOwnProperty(question) &&\n                        $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'].hasOwnProperty(question))\n                    {\n                        var num_role_participants = company_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var response_benchmark = $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'][question];\n                            var response_value     = company_data[role]['cumulative_question_scores'][question];\n\n                            company_tot += (response_value - response_benchmark);\n                            company_accum++;\n                        }\n                    }\n                }\n            }\n        }\n\n        // agency\n        var agency_tot = 0.0;\n        var agency_accum = 0.0;\n        for(var ndx = $scope.reporting.selected.evaluationEndNDX; ndx >= $scope.reporting.selected.evaluationStartNDX; ndx--)\n        {\n            var agency_data = $scope.reporting.selected.allData[ndx].agency_data;\n            for (var role in agency_data)\n            {\n                if (agency_data.hasOwnProperty(role))\n                {\n                    if(agency_data[role]['cumulative_question_scores'].hasOwnProperty(question) &&\n                        $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'].hasOwnProperty(question))\n                    {\n                        var num_role_participants = agency_data[role]['tot'];\n                        if(num_role_participants)\n                        {\n                            var response_benchmark = $scope.reporting.selected.surveyGroups[role][$scope.reporting.selected.singleGroup]['question_benchmarks'][question];\n                            var response_value     = agency_data[role]['cumulative_question_scores'][question];\n\n                            agency_tot += (response_value - response_benchmark);\n                            agency_accum++;\n                        }\n                    }\n                }\n            }\n        }\n\n        var ret = ((company_tot + agency_tot)/(company_accum + agency_accum));\n        return ret.toFixed(1);\n    },\n\n    /**\n     * [getColumnsClass description]\n     * @return {[type]} [description]\n     */\n    $scope.getColumnsClass = function() {\n\n        var ret = '';\n        if($scope.reporting.selected.surveyGroups && $scope.reporting.selected.surveyGroups.hasOwnProperty('OP'))\n        {\n            var num_groups        = Object.keys($scope.reporting.selected.surveyGroups['OP']).length + 1;\n            var num_cols_per_item = Math.floor(12 / num_groups);\n            ret                   = 'col-sm-'+num_cols_per_item;\n        }\n\n        return ret;\n    };\n\n    /**\n     * [getQuestionsColumnsClass description]\n     * @return {[type]} [description]\n     */\n    $scope.getQuestionsColumnsClass = function() {\n\n        var ret = '';\n        if($scope.reporting.selected.surveyGroups && $scope.reporting.selected.surveyGroups.hasOwnProperty('OP'))\n        {\n            if($scope.reporting.selected.singleGroup && $scope.reporting.selected.surveyGroups['OP'].hasOwnProperty($scope.reporting.selected.singleGroup))\n            {\n                var num_questions     = Object.keys($scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['questions']).length + 1;\n                var num_cols_per_item = Math.floor(12 / num_questions);\n                ret                   = 'col-sm-'+num_cols_per_item;\n            }\n        }\n\n        return ret;\n    };\n\n    /**\n     * [getQuestionsColumnsClassComplement description]\n     * @return {[type]} [description]\n     */\n    $scope.getQuestionsColumnsClassComplement = function() {\n\n        var ret = '';\n        if($scope.reporting.selected.surveyGroups && $scope.reporting.selected.surveyGroups.hasOwnProperty('OP'))\n        {\n            if($scope.reporting.selected.singleGroup && $scope.reporting.selected.surveyGroups['OP'].hasOwnProperty($scope.reporting.selected.singleGroup))\n            {\n                var num_questions     = Object.keys($scope.reporting.selected.surveyGroups['OP'][$scope.reporting.selected.singleGroup]['questions']).length + 1;\n                var num_cols_per_item = Math.floor(12 / num_questions);\n                ret                   = 'col-sm-'+(12-num_cols_per_item);\n            }\n        }\n\n        return ret;\n    };\n\n    /**\n     * [getColumnsClassComplement description]\n     * @return {[type]} [description]\n     */\n    $scope.getColumnsClassComplement = function() {\n\n        var ret = '';\n        if($scope.reporting.selected.surveyGroups && $scope.reporting.selected.surveyGroups.hasOwnProperty('OP'))\n        {\n            var num_groups        = Object.keys($scope.reporting.selected.surveyGroups['OP']).length + 1;\n            var num_cols_per_item = Math.floor(12 / num_groups);\n            ret                   = 'col-sm-'+(12-num_cols_per_item);\n        }\n\n        return ret;\n    };\n\n    /**\n     * [getGroupsClass description]\n     * @param  {[type]} group_ndx [description]\n     * @return {[type]}           [description]\n     */\n    $scope.getGroupsClass = function(group_ndx) {\n\n        var groups_class = '';\n\n        switch(group_ndx) {\n            case 0:\n                groups_class = 'group-color1';\n                break;\n            case 1:\n                groups_class = 'group-color2';\n                break;\n            case 2:\n                groups_class = 'group-color3';\n                break;\n            case 3:\n                groups_class = 'group-color4';\n                break;\n            case 4:\n                groups_class = 'group-color5';\n                break;\n            default:\n               groups_class = 'group-color1';\n               break\n        }\n\n        return groups_class;\n    }\n\n\n    /**\n     * [waitForRenderAndDoSomething description]\n     * @return {[type]} [description]\n     */\n    var waitForRenderAndDoSomething = function() {\n\n        // Wait for all templates to be loaded\n        if($http.pendingRequests.length > 0) {\n            $timeout(waitForRenderAndDoSomething);\n        } else {\n            $scope.init();\n        }\n    };\n\n    // Waits for first digest cycle\n    $timeout(waitForRenderAndDoSomething);\n\n}])\n\n.directive('chart', function ($log, $timeout) {\n\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<div></div>',\n        scope: {\n            config: '='\n        },\n        link: function (scope, element, attrs) {\n            var chart;\n            var process = function () {\n\n                // sanity check\n                if(!scope.config) {\n                    $log.log('Error: No config found');\n                    return false;\n                }\n\n                var config               = angular.extend({}, scope.config);\n                config.chart.renderTo    = element[0];\n                config.chart.events      = {};\n                config.chart.events.load = function()\n                {\n                    var chart = this;\n                    $timeout(function()\n                    {\n                        for(var series_ndx in chart.series)\n                        {\n                            chart.series[series_ndx].show();\n                        }\n                    });\n                };\n                chart = new Highcharts.Chart(config);\n                $timeout(function() {\n                    chart.reflow();\n                }, 500);\n            };\n\n            process();\n\n            scope.$watch(\"config.series\", function (loading) {\n                process();\n            });\n            scope.$watch(\"config.loading\", function (loading) {\n                if (!chart) {\n                    return;\n                }\n                if (loading) {\n                    chart.showLoading();\n                } else {\n                    chart.hideLoading();\n                }\n            });\n        }\n    };\n})\n\n.factory('restService', ['$resource', '$q', '$http', function($resource, $q, $http){\n\n    'use strict';\n    $http.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\n    return {\n\n        getServerData: function(url) {\n\n            // Le promise\n            var defer = $q.defer();\n\n            $http.get(url)\n            .success(function (data, status, headers, config) {\n                defer.resolve(data);\n            }).error(function (data, status, headers, config) {\n                console.log(status);\n            });\n\n            // return promise\n            return defer.promise;\n        },\n\n        deleteServerData: function(url) {\n\n            var defer = $q.defer();\n\n            $http.delete(url)\n            .success(function (data, status, headers, config) {\n                defer.resolve(data);\n            }).error(function (data, status, headers, config) {\n                console.log(status);\n            });\n\n            return defer.promise;\n        },\n\n        postServerData: function(url, post_data) {\n\n            var defer = $q.defer();\n\n            $http.post(url, post_data)\n            .success(function (data, status, headers, config) {\n                defer.resolve(data);\n            }).error(function (data, status, headers, config) {\n                console.log(status);\n            });\n\n            return defer.promise;\n        }\n    };\n}]);\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","(function (global){\n'use strict';\n\n//var $ = require('jquery');\nvar $ = global.$;\n\nvar Question = function() {\n\n    var self = this,\n        survey_id,\n        group,\n        question,\n        $help,\n        $el;\n\n    return self;\n};\n\nQuestion.prototype = {\n\n    /**\n     * [init - initialize object]\n     * @param  {[type]} survey_id    [description]\n     * @param  {[type]} question_obj [description]\n     * @param  {[type]} ndx          [description]\n     * @return {[type]}              [description]\n     */\n    init: function(survey_id, question_obj, ndx) {\n\n        var self = this;\n\n        self.survey_id    = survey_id;\n        self.group        = question_obj.g;\n        self.question     = question_obj.q;\n        self.question_num = question_obj.q_num;\n\n        self.generateDOMel(ndx);\n    },\n\n    /**\n     * [questionID get the limesurvey question ID]\n     * @return {[type]} [description]\n     */\n    questionID: function() {\n\n        var self = this;\n\n        return self.survey_id+'X'+self.group.id.gid+'X'+self.question.id.qid;\n    },\n\n    /**\n     * [generateDOMel - generate question li to insert in DOM]\n     * @param  {[type]} ndx [description]\n     * @return {[type]}     [description]\n     */\n    generateDOMel: function(ndx) {\n\n        var self = this;\n\n        self.question_id = self.questionID();\n        switch(ndx)\n        {\n            case 0:\n                self.$help = $(\"<li class='current inactive' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.help+\"</li>\");\n                self.$el = $(\"<li class='current' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.question.toLowerCase()+\"</li>\");\n                break;\n\n            case 1:\n                self.$help = $(\"<li class='inactive' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.help+\"</li>\");\n                self.$el = $(\"<li class='next' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.question.toLowerCase()+\"</li>\");\n                break;\n\n            default:\n                self.$help = $(\"<li class='inactive' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.help+\"</li>\");\n                self.$el = $(\"<li class='inactive' data-qnum='\"+self.question_num+\"' data-qid='\"+self.question_id+\"' data-gid='\"+self.group.id.gid+\"'>\"+self.question.question.toLowerCase()+\"</li>\");\n                break;\n        }\n    }\n};\n\nmodule.exports = Question;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9zdXJ2ZXkvX3F1ZXN0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vdmFyICQgPSByZXF1aXJlKCdqcXVlcnknKTtcbnZhciAkID0gZ2xvYmFsLiQ7XG5cbnZhciBRdWVzdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBzdXJ2ZXlfaWQsXG4gICAgICAgIGdyb3VwLFxuICAgICAgICBxdWVzdGlvbixcbiAgICAgICAgJGhlbHAsXG4gICAgICAgICRlbDtcblxuICAgIHJldHVybiBzZWxmO1xufTtcblxuUXVlc3Rpb24ucHJvdG90eXBlID0ge1xuXG4gICAgLyoqXG4gICAgICogW2luaXQgLSBpbml0aWFsaXplIG9iamVjdF1cbiAgICAgKiBAcGFyYW0gIHtbdHlwZV19IHN1cnZleV9pZCAgICBbZGVzY3JpcHRpb25dXG4gICAgICogQHBhcmFtICB7W3R5cGVdfSBxdWVzdGlvbl9vYmogW2Rlc2NyaXB0aW9uXVxuICAgICAqIEBwYXJhbSAge1t0eXBlXX0gbmR4ICAgICAgICAgIFtkZXNjcmlwdGlvbl1cbiAgICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgICAgICBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgaW5pdDogZnVuY3Rpb24oc3VydmV5X2lkLCBxdWVzdGlvbl9vYmosIG5keCkge1xuXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICBzZWxmLnN1cnZleV9pZCAgICA9IHN1cnZleV9pZDtcbiAgICAgICAgc2VsZi5ncm91cCAgICAgICAgPSBxdWVzdGlvbl9vYmouZztcbiAgICAgICAgc2VsZi5xdWVzdGlvbiAgICAgPSBxdWVzdGlvbl9vYmoucTtcbiAgICAgICAgc2VsZi5xdWVzdGlvbl9udW0gPSBxdWVzdGlvbl9vYmoucV9udW07XG5cbiAgICAgICAgc2VsZi5nZW5lcmF0ZURPTWVsKG5keCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFtxdWVzdGlvbklEIGdldCB0aGUgbGltZXN1cnZleSBxdWVzdGlvbiBJRF1cbiAgICAgKiBAcmV0dXJuIHtbdHlwZV19IFtkZXNjcmlwdGlvbl1cbiAgICAgKi9cbiAgICBxdWVzdGlvbklEOiBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIHNlbGYuc3VydmV5X2lkKydYJytzZWxmLmdyb3VwLmlkLmdpZCsnWCcrc2VsZi5xdWVzdGlvbi5pZC5xaWQ7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFtnZW5lcmF0ZURPTWVsIC0gZ2VuZXJhdGUgcXVlc3Rpb24gbGkgdG8gaW5zZXJ0IGluIERPTV1cbiAgICAgKiBAcGFyYW0gIHtbdHlwZV19IG5keCBbZGVzY3JpcHRpb25dXG4gICAgICogQHJldHVybiB7W3R5cGVdfSAgICAgW2Rlc2NyaXB0aW9uXVxuICAgICAqL1xuICAgIGdlbmVyYXRlRE9NZWw6IGZ1bmN0aW9uKG5keCkge1xuXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICBzZWxmLnF1ZXN0aW9uX2lkID0gc2VsZi5xdWVzdGlvbklEKCk7XG4gICAgICAgIHN3aXRjaChuZHgpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBzZWxmLiRoZWxwID0gJChcIjxsaSBjbGFzcz0nY3VycmVudCBpbmFjdGl2ZScgZGF0YS1xbnVtPSdcIitzZWxmLnF1ZXN0aW9uX251bStcIicgZGF0YS1xaWQ9J1wiK3NlbGYucXVlc3Rpb25faWQrXCInIGRhdGEtZ2lkPSdcIitzZWxmLmdyb3VwLmlkLmdpZCtcIic+XCIrc2VsZi5xdWVzdGlvbi5oZWxwK1wiPC9saT5cIik7XG4gICAgICAgICAgICAgICAgc2VsZi4kZWwgPSAkKFwiPGxpIGNsYXNzPSdjdXJyZW50JyBkYXRhLXFudW09J1wiK3NlbGYucXVlc3Rpb25fbnVtK1wiJyBkYXRhLXFpZD0nXCIrc2VsZi5xdWVzdGlvbl9pZCtcIicgZGF0YS1naWQ9J1wiK3NlbGYuZ3JvdXAuaWQuZ2lkK1wiJz5cIitzZWxmLnF1ZXN0aW9uLnF1ZXN0aW9uLnRvTG93ZXJDYXNlKCkrXCI8L2xpPlwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHNlbGYuJGhlbHAgPSAkKFwiPGxpIGNsYXNzPSdpbmFjdGl2ZScgZGF0YS1xbnVtPSdcIitzZWxmLnF1ZXN0aW9uX251bStcIicgZGF0YS1xaWQ9J1wiK3NlbGYucXVlc3Rpb25faWQrXCInIGRhdGEtZ2lkPSdcIitzZWxmLmdyb3VwLmlkLmdpZCtcIic+XCIrc2VsZi5xdWVzdGlvbi5oZWxwK1wiPC9saT5cIik7XG4gICAgICAgICAgICAgICAgc2VsZi4kZWwgPSAkKFwiPGxpIGNsYXNzPSduZXh0JyBkYXRhLXFudW09J1wiK3NlbGYucXVlc3Rpb25fbnVtK1wiJyBkYXRhLXFpZD0nXCIrc2VsZi5xdWVzdGlvbl9pZCtcIicgZGF0YS1naWQ9J1wiK3NlbGYuZ3JvdXAuaWQuZ2lkK1wiJz5cIitzZWxmLnF1ZXN0aW9uLnF1ZXN0aW9uLnRvTG93ZXJDYXNlKCkrXCI8L2xpPlwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBzZWxmLiRoZWxwID0gJChcIjxsaSBjbGFzcz0naW5hY3RpdmUnIGRhdGEtcW51bT0nXCIrc2VsZi5xdWVzdGlvbl9udW0rXCInIGRhdGEtcWlkPSdcIitzZWxmLnF1ZXN0aW9uX2lkK1wiJyBkYXRhLWdpZD0nXCIrc2VsZi5ncm91cC5pZC5naWQrXCInPlwiK3NlbGYucXVlc3Rpb24uaGVscCtcIjwvbGk+XCIpO1xuICAgICAgICAgICAgICAgIHNlbGYuJGVsID0gJChcIjxsaSBjbGFzcz0naW5hY3RpdmUnIGRhdGEtcW51bT0nXCIrc2VsZi5xdWVzdGlvbl9udW0rXCInIGRhdGEtcWlkPSdcIitzZWxmLnF1ZXN0aW9uX2lkK1wiJyBkYXRhLWdpZD0nXCIrc2VsZi5ncm91cC5pZC5naWQrXCInPlwiK3NlbGYucXVlc3Rpb24ucXVlc3Rpb24udG9Mb3dlckNhc2UoKStcIjwvbGk+XCIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBRdWVzdGlvbjsiXX0=","(function (global){\n'use strict';\n\n//var $ = require('jquery');\nvar $ = global.$;\nvar _ = require('underscore');\nvar History = window.History;\n\nvar TweenLite = global.TweenLite;\n\nvar Survey = function()\n{\n    this.answers = {};\n    this.questionObjects = [];\n    this.parent_el = undefined;\n};\n\nSurvey.prototype = {\n\n    /**\n     * [exchangeData - generic fnc for async data fetching]\n     * @param  {[type]} postData [description]\n     * @param  {[type]} storage  [description]\n     * @return {[type]}          [description]\n     */\n    exchangeData: function(postData, storage)\n    {\n        var self = this;\n\n        return $.ajax({\n\n            url: '/cms/wp-admin/admin-ajax.php',\n            type: 'POST',\n            dataType: 'json',\n            data: postData\n\n        }).done(function(data) {\n            self[storage] = data;\n        });\n    },\n\n    /**\n     * [fetchData fetches questions and groups for all steps of the questionaire relation]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n    fetchData: function(callback) {\n\n        var self = this;\n\n        var async_deferreds = [];\n        if(self.do180)\n        {\n            var agency_groups_data = {action: 'getGroups', userRole: self.user_role, limesurvey_id: self.agency_surveyid, step: '180'};\n            async_deferreds.push(self.exchangeData(agency_groups_data, 'agency_groups'));\n            var agency_questions_data = {action: 'getQuestions', userRole: self.user_role, limesurvey_id: self.agency_surveyid, step: '180'};\n            async_deferreds.push(self.exchangeData(agency_questions_data, 'agency_questions'));\n        }\n\n        if(self.do360)\n        {\n            var company_groups_data = {action: 'getGroups', userRole: self.user_role, limesurvey_id: self.company_surveyid, step: '360'};\n            async_deferreds.push(self.exchangeData(company_groups_data, 'company_groups'));\n            var company_questions_data = {action: 'getQuestions', userRole: self.user_role, limesurvey_id: self.company_surveyid, step: '360'};\n            async_deferreds.push(self.exchangeData(company_questions_data, 'company_questions'));\n        }\n\n        // when all async data fetching is done\n        $.when.apply($, async_deferreds).then(function(schemas)\n        {\n            if (!schemas) {\n                throw ('ERROR: no survey data retrieved by the fetchData call');\n            }\n\n            if(self.do180)\n            {\n                self.curr_step = '180';\n                self.groups = self.agency_groups;\n                self.questions = self.agency_questions;\n            }\n            else\n            {\n                self.curr_step = '360';\n                self.groups = self.company_groups;\n                self.questions = self.company_questions;\n            }\n\n            console.log('groups', self.groups);\n            console.log('questions', self.questions);\n\n            self.initGroups();\n            self.initQuestions();\n\n            if (callback && typeof callback == 'function') {\n                callback();\n            }\n\n        }, function(e) {\n            console.log(\"My ajax failed\");\n        });\n\n        return self;\n    },\n\n    /**\n     * [initGroups - initializes groups related DOM elements]\n     * used on init and reset360\n     * @return {[type]} [description]\n     */\n    initGroups: function() {\n\n        var self = this;\n\n        self.group_gids = [];\n        self.group_last_question = {};\n        self.num_groups = self.groups.length;\n        var width_perc  = 100.0/self.num_groups;\n\n        $('.groups-nav > ul').empty();\n        $('.nav-background').remove();\n        $('.introgroups-ul').empty();\n\n        $.each(self.groups, function(index, el) {\n\n            self.group_gids.push(el.group.id.gid);\n            self.group_last_question[el.group.id.gid] = -1;\n\n            var li_class  = 'text-center';\n            var img_class = 'nav-background';\n\n            if(index === 0)\n            {\n                self.curr_group = el.group.id.gid;\n                li_class  = 'text-center active';\n                img_class = 'nav-background active';\n            }\n\n            // append intro groups li\n            var intro_li_class = '';\n            var $intro_li = $(\"<li class='text-center'>\"+el.group.group_name+\"</li>\").addClass('question-group-' + (index + 1) );\n            $('.introgroups-ul').append($intro_li);\n\n            // append nav li\n            var li_content = (index === 0 ? '1/'+el.num_questions : el.num_questions);\n            var $li = \"<li class='\"+li_class+\"' style='width:\"+width_perc+\"%'><a href='#' data-gid='\"+el.group.id.gid+\"' data-num-questions='\"+el.num_questions+\"' target='_blank'>\"+li_content+\"</a></li>\";\n            $('.groups-nav ul').append($li);\n\n            // append nav background\n            var nav_background_img_path = \"/content/themes/procync/app/assets/images/nav/nav\"+self.groups.length+\"-\"+index+\".png\";\n            var $img = $('<img src=\"'+nav_background_img_path+'\" alt=\"previous\" data-ndx=\"'+index+'\" class=\"'+img_class+'\">');\n            $('.procyncRoot .category-navigation-container').prepend($img);\n\n        });\n\n        $('.group-header').html(self.groups[0].group.group_name).attr('data-group-id', self.groups[0].group.id.gid);;\n    },\n\n\n    /**\n     * [initGroups - initializes questions related DOM elements]\n     * used on init and reset360\n     */\n    initQuestions: function() {\n\n        var self = this;\n        self.$questionContainer = $('.question-container'),\n        self.$helpContainer     = $('.help-container');\n\n        self.$questionContainer.empty();\n        self.$helpContainer.empty();\n\n        self.num_questions     = self.questions.length;\n        self.curr_question_ndx = 0;\n        self.prev_question_ndx = self.num_questions -1;\n        self.next_question_ndx = 1;\n\n        $.each(self.questions, function(index, el)\n        {\n            var question = new global.App.question;\n            question.init(self.survey_id, el, index);\n            self.$questionContainer.append(question.$el);\n            self.$helpContainer.append(question.$help);\n            self.questionObjects.push(question);\n        });\n\n        // setup input for 1st question\n        var curr_question_id = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\").attr('data-qid');\n        $('input.slider:first').attr('data-qid', curr_question_id);\n        $('.go-next-question').addClass('inactive');\n    },\n\n\n    /**\n     * [init - called on document ready]\n     * @return {[type]} [description]\n     */\n    init: function() {\n\n        var self = this;\n\n        self.isAnimating        = false;\n        self.$questionContainer = $('.question-container');\n\n        self.do180              = parseInt($('.procyncRoot').attr('data-do180'), 10);\n        self.do360              = parseInt($('.procyncRoot').attr('data-do360'), 10);\n        self.curr_step          = (!self.do180 ? '360' : '180');\n\n        self.user_role          = $('.procyncRoot').attr('data-userrole');\n        self.user_type          = $('.procyncRoot').attr('data-usertype');\n        self.user_relationship  = $('.procyncRoot').attr('data-userrelationship');\n        self.relationship_type  = $('.procyncRoot').attr('data-relationshiptype');\n\n        self.agency_name        = $('.procyncRoot').attr('data-agencyname');\n        self.company_name       = $('.procyncRoot').attr('data-companyname');\n        self.agency_surveyid    = $('.procyncRoot').attr('data-survey_id_180');\n        self.company_surveyid   = $('.procyncRoot').attr('data-survey_id_360');\n\n        if(self.do180)\n        {\n            self.survey_id = self.agency_surveyid;\n            $('.content-180').show();\n            $('.content-360').hide();\n        }\n        else\n        {\n            self.survey_id = self.company_surveyid;\n            $('.content-360').show();\n            $('.content-180').hide();\n        }\n\n        $('.group-header, .procyncRoot').removeClass('group-cat1 group-cat2 group-cat3 group-cat4 group-cat5').addClass('group-cat1');\n\n        if(!(self.do180 && self.do360)) {\n            $('.reset360orExit').remove();\n        }\n\n        if(self.do180 && self.do360) {\n            $('.closeWindow').hide();\n        }\n\n        $('.procyncIntro').show();\n        $('.procyncIntro').css('display', 'block');\n\n        self.answers = {};\n        var $slider = $('.survey-range-slider');\n        self.fetchData(function() {\n            $slider.attr('data-qid', self.questionObjects[0].question_id);\n        });\n        self.bindEvents();\n        self.setTitle();\n\n\n        var rangeslider_options = {\n\n            polyfill: false,\n            rangeClass: 'rangeslider',\n            fillClass: 'rangeslider__fill',\n            handleClass: 'rangeslider__handle',\n\n            onInit: function() {},\n            onSlide: function(position, value) {\n\n                this.$element.siblings('.input-val').html(value.toFixed(1));\n                if($('.go-next-question').hasClass('inactive')) {\n                    $('.go-next-question').removeClass('inactive');\n                }\n            }\n        }\n\n        if(global.platform.name === \"IE\" && parseInt(global.platform.version, 10) < 10) {\n            rangeslider_options.polyfill = true;\n        }\n\n        $('input.slider').rangeslider(rangeslider_options);\n\n        console.log('platform', platform.name);\n        if (platform.name === 'Safari' && platform.os.family === 'iOS' && parseInt(platform.os.version, 10) > 7 || platform.ua.indexOf('like Mac OS X') != -1) {\n            $('.lower-inputs').css('bottom', '8rem');\n        }\n\n    },\n\n    /**\n     * [reset360orExit - similar to above - called on transition from 180 to 360]\n     * @return {[type]} [description]\n     */\n    reset360orExit: function() {\n\n        var self = this;\n\n        $('input.slider').bind(\"change paste keyup\", function() {\n            $('.input-val').html($('input.slider').val());\n        });\n\n        $('.group-header, .procyncRoot').removeClass('group-cat1 group-cat2 group-cat3 group-cat4 group-cat5').addClass('group-cat1');\n\n        // reset all the things\n        if(self.relationship_type === '360') {\n\n            if(self.curr_step === '180') {\n\n                self.curr_step = '360';\n\n                // $('.main-content').show();\n                $('.posted-answers').empty();\n                $('.answers').hide();\n                $('.reset360orExit').remove();\n                $('.closeWindow').show();\n\n                $('.content-360').show();\n                $('.content-180').hide();\n\n                $('.login-content2').hide();\n                $('.login-content').show();\n\n                $('.login-action2').hide();\n                $('.login-action').show();\n                $('.lower-inputs').show();\n\n                $('.category-navigation-container').show();\n                $('.groups-nav').show();\n\n                $('.procyncIntro').show();\n\n                // FFF\n                self.survey_id        = self.company_surveyid;\n\n                self.answers   = {};\n                self.groups    = self.company_groups;\n                self.questions = self.company_questions;\n\n                self.initGroups();\n                self.initQuestions();\n                self.setTitle();\n\n                self.setContentTopMargin();\n            }\n\n        } else if(self.relationship_type === '180') {\n\n            console.log('Error: this is a 180');\n        }\n    },\n\n    /**\n     * [updateNav - uses for updating navbar when current question group changes]\n     * @param  {[type]} $curr_el [description]\n     * @return {[type]}          [description]\n     */\n    updateNav: function($curr_el) {\n\n        var self = this;\n\n        // get current question group attributes\n        var curr_question_group = $curr_el.attr('data-gid');\n        var li_ndx              = _.indexOf(self.group_gids, curr_question_group);\n\n        var $curr_group_questions = $('.question-container li[data-gid=\"'+curr_question_group+'\"]');\n        var q_num               = 0;\n\n        if(!$curr_group_questions.hasClass('current')) {\n            console.log('weirdness - no current in .current group ??? ', $(this));\n            return false;\n        }\n\n        $curr_group_questions.each(function() {\n\n            if($(this).hasClass('current')) { return false;}\n            q_num++;\n        });\n\n        self.group_last_question[curr_question_group] = self.curr_question_ndx;\n        console.log('last questions', self.group_last_question);\n\n        var increment = li_ndx+1;\n        var new_class_name = (self.curr_step === '180' ? 'group-cat'+increment : 'group360-cat'+increment);\n\n        var all_group_cat_classes = 'group-cat1 group-cat2 group-cat3 group-cat4 group-cat5 group360-cat1 group360-cat2 group360-cat3';\n        $('.group-header, .procyncRoot').removeClass(all_group_cat_classes).addClass(new_class_name);\n        if(curr_question_group !== self.curr_group)\n        {\n            // update group-header\n            $('.group-header').html(self.groups[li_ndx].group.group_name).attr('data-group-id', self.groups[li_ndx].group.id.gid);\n\n            // get prev group li ndx\n            var prev_li_ndx = _.indexOf(self.group_gids, self.curr_group);\n\n            // reset prev group\n            $('.groups-nav ul li:eq('+prev_li_ndx+')').removeClass('active');\n            $('.groups-nav ul li:eq('+li_ndx+')').addClass('active');\n            $('.groups-nav ul li:eq('+prev_li_ndx+') a').html(self.groups[prev_li_ndx].num_questions);\n            self.curr_group = curr_question_group;\n\n            // update previous background class\n            $('.nav-background[data-ndx='+prev_li_ndx+']').removeClass('active');\n            $('.nav-background[data-ndx='+li_ndx+']').addClass('active');\n        }\n\n        var group_text = (q_num+1)+'/'+self.groups[li_ndx].num_questions;\n        $('.groups-nav ul li:eq('+li_ndx+') a').html(group_text);\n    },\n\n    /**\n     * [goToQuestion - go to a specific question without doing any animations]\n     * called when :\n     *     1) selecting a different group in the navbar\n     *     2) found somethng incomplete upon saving answers\n     *\n     * @param  {[type]} question_ndx [description]\n     * @param  {[type]} $nav_el      [description]\n     * @return {[type]}              [description]\n     */\n    goToQuestion: function(question_ndx, $nav_el) {\n\n        var self = this;\n        console.log('ndx', question_ndx);\n\n        if(question_ndx !== -1) {\n\n            // reset markers\n            self.curr_question_ndx = question_ndx;\n            self.prev_question_ndx = (self.curr_question_ndx > 0 ? self.curr_question_ndx - 1 : self.num_questions - 1);\n            self.next_question_ndx = (self.curr_question_ndx < self.num_questions - 1 ? self.curr_question_ndx + 1 : 0);\n\n            // reset li next previous\n            self.$questionContainer.find(\"li\").removeClass('next').removeClass('previous').removeClass('current').removeClass('inactive').addClass('inactive');\n            self.$helpContainer.find(\"li\").removeClass('next').removeClass('previous').removeClass('current').removeClass('inactive').addClass('inactive');\n\n            // reset current\n            var $new_prev_el;\n            if(self.prev_question_ndx !== self.num_questions - 1) {\n                $new_prev_el = self.$questionContainer.find(\"li:eq(\"+self.prev_question_ndx+\")\");\n                $new_prev_el.removeClass(\"inactive\").addClass('previous');\n            }\n\n            var $new_curr_el = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n            var $new_curr_help_el = self.$helpContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n            $new_curr_el.removeClass(\"inactive\").addClass('current');\n            $new_curr_help_el.addClass('current');\n            $new_curr_el.css('opacity', 1);\n\n            var $new_next_el;\n            if(self.next_question_ndx !== 0) {\n                $new_next_el = self.$questionContainer.find(\"li:eq(\"+self.next_question_ndx+\")\");\n                $new_next_el.removeClass(\"inactive\").addClass('next');\n            }\n\n            var curr_question_id = $new_curr_el.attr('data-qid');\n            $('input.slider').attr('data-qid', curr_question_id);\n\n            // set input value\n            if(self.answers.hasOwnProperty(curr_question_id))\n            {\n                $('input.slider').val(self.answers[curr_question_id]);\n                $('.input-val').html($('input.slider').val());\n            }\n\n            self.updateNav($new_curr_el);\n        }\n\n        $('.groups-nav li').removeClass('active');\n        $nav_el.closest('li').addClass('active');\n    },\n\n    /**\n     * [nextAnim - move forward]\n     * used by nextQuestion\n     * @return {[type]} [description]\n     */\n    nextAnim: function() {\n\n        var self = this;\n\n        var $helpContainer     = $('.help-container');\n\n        // remove old prev\n        if(self.next_question_ndx !== 0)\n        {\n            var $old_prev_el = self.$questionContainer.find(\"li:eq(\"+self.prev_question_ndx+\")\");\n            TweenLite.to($old_prev_el, 0, {autoAlpha:0, className:\"inactive\"});\n        }\n\n        // update li's ndx's\n        self.curr_question_ndx = (self.curr_question_ndx + 1 > self.num_questions - 1 ? 0 : self.curr_question_ndx + 1);\n        self.prev_question_ndx = (self.prev_question_ndx + 1 > self.num_questions - 1 ? 0 : self.prev_question_ndx + 1);\n        self.next_question_ndx = (self.next_question_ndx + 1 > self.num_questions - 1 ? 0 : self.next_question_ndx + 1);\n\n        // add new prev\n        var $new_prev_el = self.$questionContainer.find(\"li:eq(\"+self.prev_question_ndx+\")\");\n        TweenLite.to($new_prev_el, 0.5, {autoAlpha:1, className:\"previous\"});\n\n        // curr help\n        self.$helpContainer.find(\"li\").removeClass('next').removeClass('previous').removeClass('current').removeClass('inactive').addClass('inactive');\n        var $new_curr_help_el = self.$helpContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n        $new_curr_help_el.addClass('current');\n\n        // add new current\n        var $new_curr_el = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n        TweenLite.to($new_curr_el, 0.5, {autoAlpha:1, className:\"current\"});\n\n        // add new next\n        if(self.next_question_ndx !== 0) {\n            var $new_next_el = self.$questionContainer.find(\"li:eq(\"+self.next_question_ndx+\")\");\n            TweenLite.to($new_next_el, 0, {autoAlpha:0, className:\"next\"});\n        }\n        //TweenLite.to($('#question-container'), 0.2, {top: 0 - $new_prev_el.position().top});\n\n        setTimeout(function() {\n            self.updateNav($new_curr_el);\n        }, 700);\n\n    },\n\n    /**\n     * [prevAnim - move back]\n     * used by prevQuestion\n     * @return {[type]} [description]\n     */\n    prevAnim: function() {\n\n        var self = this;\n\n        var $helpContainer     = $('.help-container');\n\n        // remove old next\n        var $old_next_el = self.$questionContainer.find(\"li:eq(\"+self.next_question_ndx+\")\");\n        TweenLite.to($old_next_el, 0, {autoAlpha:0, className:\"inactive\"});\n\n        // update li ndx's\n        self.curr_question_ndx = (self.curr_question_ndx - 1 < 0 ? self.num_questions - 1 : self.curr_question_ndx - 1);\n        self.prev_question_ndx = (self.prev_question_ndx - 1 < 0 ? self.num_questions - 1 : self.prev_question_ndx - 1);\n        self.next_question_ndx = (self.next_question_ndx - 1 < 0 ? self.num_questions - 1 : self.next_question_ndx - 1);\n\n        console.log('prev anim ndxs', self.curr_question_ndx, self.prev_question_ndx, self.next_question_ndx);\n\n        // add new next\n        var $new_next_el = self.$questionContainer.find(\"li:eq(\"+self.next_question_ndx+\")\");\n        TweenLite.to($new_next_el, 0.5, {autoAlpha:1, className:\"next\"});\n\n        // curr help\n        $helpContainer.find(\"li\").removeClass('next').removeClass('previous').removeClass('current').removeClass('inactive').addClass('inactive');\n        var $new_curr_help_el = self.$helpContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n        $new_curr_help_el.addClass('current');\n\n        // add new curr\n        var $new_curr_el = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\");\n        TweenLite.to($new_curr_el, 0.5, {autoAlpha:1, className:\"current\"});\n\n        // add new prev\n        if(self.prev_question_ndx !== self.num_questions - 1) {\n            var $new_prev_el = self.$questionContainer.find(\"li:eq(\"+self.prev_question_ndx+\")\");\n            TweenLite.to($new_prev_el, 0, {autoAlpha:0, className:\"previous\"});\n        }\n\n        var $discount_el = ($new_prev_el ? $new_prev_el : $new_curr_el);\n        //TweenLite.to($('#question-container'), 0.2, {top: 0 - $discount_el.position().top});\n\n        setTimeout(function() {\n            self.updateNav($new_curr_el);\n        }, 700);\n    },\n\n    /**\n     * [nextQuestion - go forward by 1 question]\n     * @return {[type]} [description]\n     */\n    nextQuestion: function() {\n\n        var self = this,\n        $slider = $('.survey-range-slider'),\n        $sliderValueContainer = $slider.prev('.input-val');\n        self.isAnimating = true;\n\n        // get input value\n        var answer_val = $slider.val();\n        var answer_id = $slider.attr('data-qid');\n        self.answers[answer_id] = answer_val;\n\n        // last question\n        if(self.curr_question_ndx === self.num_questions-1) {\n\n            var $el = self.verifyAnswers();\n            if($el === false)\n            {\n                $('.main-content').hide();\n                $('.lower-inputs').hide();\n                self.saveAnswers();\n\n            } else {\n\n                console.log('going to missed question');\n\n                var question_ndx = $el.index();\n                var group_id = $el.attr('data-gid');\n                var $nav_el = $(\".groups-nav a[data-gid=\"+group_id+\"]\");\n                self.goToQuestion(question_ndx, $nav_el);\n            }\n\n        // just another question\n        } else {\n\n            self.nextAnim();\n\n            // set input qid\n            var curr_question_id = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\").attr('data-qid');\n            $slider.attr('data-qid', curr_question_id);\n\n            // set input value\n            if(self.answers.hasOwnProperty(curr_question_id)) {\n                $slider.val(self.answers[curr_question_id]);\n            } else {\n                $slider.val(5);\n            }\n\n            $sliderValueContainer.html($slider.val());\n            //history.pushState({q_ndx: self.curr_question_ndx}, null, null);\n            History.pushState({q_ndx: self.curr_question_ndx}, null, null);\n        }\n\n        $('input[type=\"range\"]').rangeslider('update', true);\n        $('.go-next-question').addClass('inactive');\n\n        self.isAnimating = false;\n    },\n\n    /**\n     * [prevQuestion - go back by 1 question]\n     * @return {[type]} [description]\n     */\n    prevQuestion: function() {\n\n        var self = this,\n            $slider = $('.survey-range-slider'),\n            $sliderValueContainer = $slider.prev('.input-val');\n\n        self.isAnimating = true;\n        if(self.curr_question_ndx !== 0) {\n\n            self.prevAnim();\n            var curr_question_id = self.$questionContainer.find(\"li:eq(\"+self.curr_question_ndx+\")\").attr('data-qid');\n            $slider.attr('data-qid', curr_question_id);\n\n            // set input value\n            if(self.answers.hasOwnProperty(curr_question_id))\n            {\n                $slider.val(self.answers[curr_question_id]);\n                $sliderValueContainer.html($slider.val());\n            }\n\n            $(window).trigger(\"popstate\");\n        }\n\n        $('input[type=\"range\"]').rangeslider('update', true);\n        self.isAnimating = false;\n    },\n\n    verifyAnswers: function() {\n\n        var self = this;\n\n        console.log('all qo', self.questionObjects, self.answers);\n        for(var qo in self.questionObjects)\n        {\n            console.log('>>> qo ', self.answers[self.questionObjects[qo].question_id], self.questionObjects[qo].question_id);\n            if(self.answers[self.questionObjects[qo].question_id] === undefined)\n            {\n                var $el = self.$questionContainer.find(\"li[data-qid=\"+self.questionObjects[qo].question_id+\"]\");\n                if($el.length > 0) {\n                    return $el;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n\n        return false;\n    },\n\n    /**\n     * [saveAnswers description]\n     * @return {[type]} [description]\n     */\n    saveAnswers: function() {\n\n        var self = this;\n\n        var post_data = {};\n        $.extend(true, post_data, self.answers, {action: 'postAnswers', limesurvey_id: self.survey_id, evaluation_id: self.user_relationship, step: self.curr_step});\n        $('.posted-answers').empty();\n\n        var response_status;\n        $.when(self.exchangeData(post_data, response_status)).done(function(data) {\n\n            console.log('answers response', data);\n            if(data.status === 'OK')\n            {\n                $('.category-navigation-container').hide();\n                $('.groups-nav').hide();\n                $('.answers').show();\n\n                console.log('Responses saved');\n            }\n            else\n            {\n                console.log('ERROR', data.message);\n            }\n        });\n    },\n\n    /**\n     * [setContentTopMargin description]\n     */\n    setContentTopMargin: function() {\n\n        var self = this;\n        $(document).on('click', 'button.login-action2', function() {\n\n            var self = this;\n            var groups_height = $('.nav-background:first').height();\n\n            $('.groups-nav').height(groups_height);\n            $('.groups-ul').height(groups_height);\n\n        })\n    },\n\n\n    /**\n     * [setTitle description]\n     */\n    setTitle: function()\n    {\n        var self = this;\n        var title_str = '';\n\n        if(self.curr_step === '180')\n        {\n            title_str = self.agency_name;\n        }\n        else if(self.curr_step === '360')\n        {\n            title_str = self.company_name;\n        }\n        else\n        {\n            title_str = 'Error';\n        }\n\n        $('.rel-title').html(title_str);\n    },\n\n\n    /**\n     * [bindEvents - bind all required events]\n     * @return {[type]} [description]\n     */\n    bindEvents: function() {\n\n        var self = this;\n\n        // orientation lock\n        $(window).bind('orientationchange', function(e) {\n\n            switch ( window.orientation ) {\n                case 0:\n                    $('.turnDeviceNotification').css('display', 'none');\n                    // The device is in portrait mode now\n                    break;\n\n                case 180:\n                    $('.turnDeviceNotification').css('display', 'none');\n                    // The device is in portrait mode now\n                    break;\n\n                case 90:\n                    // The device is in landscape now\n                    $('.turnDeviceNotification').css('display', 'block');\n                    break;\n\n                case -90:\n                    // The device is in landscape now\n                    $('.turnDeviceNotification').css('display', 'block');\n                    break;\n            }\n\n        });\n\n        // intro setup\n        if($('.procyncIntro').length) {\n\n            $('body').on('click', '.login-action', function(ev)\n            {\n                ev.preventDefault();\n                $('.login-content').hide();\n                $('.login-content2').show();\n                $('.login-action').hide();\n                $('.login-action2').show();\n            });\n\n            $('body').on('click', '.login-action2', function(ev)\n            {\n                ev.preventDefault();\n                $('.question-container').css('top', 0);\n                $('.procyncIntro').hide();\n                $('.main-content').show();\n                $('.procyncRoot').show();\n                self.setContentTopMargin();\n            });\n        }\n\n        // main questionaire setup\n        if($('.procyncRoot').length) {\n\n            // Bind to StateChange Event - this is meant to use statechange but thta fires all the time :(\n            History.Adapter.bind(window, 'statechange', function(evt){ // Note: We are using statechange instead of popstate\n                var State = History.getState(); // Note: We are using History.getState() instead of event.state\n                //History.log(State.data, State.title, State.url);\n\n                var question_ndx = State.data.q_ndx;\n                var group_id = self.$questionContainer.find(\"li:eq(\"+question_ndx+\")\").attr('data-gid');\n                var $nav_el = $(\".groups-nav a[data-gid=\"+group_id+\"]\");\n                //self.goToQuestion(State.q_ndx, $nav_el);\n\n                console.log('popstate', question_ndx, State);\n            });\n\n            // // back button browser history\n            // window.addEventListener(\"popstate\", function(e) {\n\n            //     e.preventDefault();\n\n            //     var question_ndx = e.state.q_ndx;\n            //     var group_id = self.$questionContainer.find(\"li:eq(\"+question_ndx+\")\").attr('data-gid');\n            //     var $nav_el = $(\".groups-nav a[data-gid=\"+group_id+\"]\");\n            //     self.goToQuestion(e.state.q_ndx, $nav_el);\n\n            //     return true;\n            // });\n\n            $(window).resize(function() {\n                self.setContentTopMargin();\n            });\n\n            $('body').on('click','.reset360orExit', function(ev) {\n                ev.preventDefault();\n                self.reset360orExit();\n            });\n\n            $('body').on('click','.go-prev-question', function() {\n                self.prevQuestion();\n            });\n\n            $('body').on('click','.go-next-question', function() {\n\n                if($('.go-next-question').hasClass('inactive')) {\n                    $('.go-next-question').removeClass('inactive');\n                } else {\n                    self.nextQuestion();\n                }\n            });\n\n            $('.help-toggle').click(function(evt) {\n                evt.preventDefault();\n                var $help_status = $('.help-container').find('.current');\n                if($help_status.hasClass('inactive')) {\n                    $help_status.removeClass('inactive');\n                } else {\n                    $help_status.addClass('inactive');\n                }\n\n            });\n\n            $('body').on('click', '.groups-nav a', function(ev) {\n\n                var $el = $(this);\n\n                ev.preventDefault();\n                var gid = $(this).attr('data-gid');\n\n                // find last answered question with within group\n                // var question_ndx = self.$questionContainer.find(\"li[data-gid=\"+gid+\"]:first\").index();\n                var question_ndx = self.group_last_question[gid];\n                if(-1 === question_ndx) {\n                    return false;\n                } else {\n                    self.goToQuestion(question_ndx, $el);\n                }\n\n            });\n        }\n    }\n};\n\nmodule.exports = new Survey();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,"]}