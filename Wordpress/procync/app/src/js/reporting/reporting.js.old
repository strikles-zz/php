
    /**
     * [setQuarterIntervals description]
     */
    $scope.setQuarterIntervals = function() {

        var quarters = [];
        for(var y = parseInt($scope.reporting.selected.evaluation_start.period.year, 10); y <= parseInt($scope.reporting.selected.evaluation_end.period.year, 10); y++)
        {
            var end_quarter = (y === parseInt($scope.reporting.selected.evaluation_end.period.year, 10) ? parseInt($scope.reporting.selected.evaluation_end.period.quarter, 10) : 4);
            for(var q = parseInt($scope.reporting.selected.evaluation_start.period.quarter, 10); q <= end_quarter; q++)
            {
                var curr_date          = y+''+q;
                var matched_evaluation = false;
                var matched_ndx        = -1;
                for(var ndx = 0; ndx < $scope.reporting.selected.all_data.length; ndx++)
                {
                    if(curr_date === $scope.reporting.selected.all_data[ndx].period.date)
                    {
                        matched_ndx        = ndx;
                        matched_evaluation = true;
                        break;
                    }
                }
                quarters.push({date: curr_date, ndx: matched_ndx, matched: matched_evaluation});
            }
        }

        $scope.quarter_intervals = quarters;
    };

    /**
     * [getRandomFloat description]
     * @param  {[type]} min [description]
     * @param  {[type]} max [description]
     * @return {[type]}     [description]
     */
    $scope.getRandomFloat = function(min, max)
    {
        var ret = (Math.random()*(max - min)) + min;
        return parseFloat(ret.toFixed(1));
    },

    $scope.zeroFill = function(number, width)
    {
        width -= number.toString().length;
        if ( width > 0 )
        {
            return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
        }
        return number + ""; // always return a string
    }

    /**
     * [resize - description]
     * @return {[type]} [description]
     */
    $scope.resize = function() {
        $(window).trigger('resize');
        $('.highcharts-container svg').width($('.highcharts-container:last svg').width());
    }